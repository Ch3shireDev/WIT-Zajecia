plan na 1:00 że Zakładam że państwo nie słyszą i widzą to co jest na ekranie tak plan na dzisiejsze zajęcia jest następujące najpierw te omówić zadania domowe Są przykłady i jechać chyba wezmę następnie 
części wykładów dotyczące pierwsze zarządzania procesami najpewniej Ustal tych drugich dwóch godzinach zaczniemy zarządzania pamięcią operacyjną No jak zwykle będą wskazania w domu Może tak Spójrzmy jeszcze na mój profil w gubi Jakie są w tej chwili materiały które dzisiaj korzystam 
Co to są kolejne slajdy część trzecia czwarta i piąta część 3 to do omówienia tych zadań domowych do zarządzania plikami systemami plików część 4 dotyczy zarządzania procesami ip65 dotyczy zarządzania pamięcią operacyjną i też chcę zwrócić państwa uwagę na ten plik zagadnieniami podstawowymi 
Ja staram się z tych zagadnień podstawowych pewne przykłady pytań Czy domowych które są poszczególnych wysłana to Niemniej do ponieważ to będzie na końcu naszego kursu i sprawdzian lub zasadził tak jak egzamin i na nim Będą też te podstawowe także bardzo proszę na to zwrócić uwagę przy przygotowaniu przygotować 
tego tęczowego sprawdzian dobrze przyjdziemy Teraz do zagadnienia związanego z zadaniem domowym to było z wykładu trzeciego ona dotyczyło tego w jaki sposób adresowany jest plik na dysku do tego celu jest potrzebna informacja o wolnych miejscach 
zajętych miejscach na tym dysku ona jest w formie mapy bitowej poszczególne miejsca na dysku mają swoje adresy przedstawiam przedstawiłem państwu taki schemat adresowania używany do zaawansowanych systemach to jest zarówno uwzględnione są bloki jaki część bloków zwany fragmentami i to co ogólne reguły 
omawianiu przykładów zadań domowych rynek przykład który jest obrzezanie Poprosiłem u kogoś rodzinę na Bardzo proszę o przyciszenie mikrofonu To jest przykre Ania z dobrym rozwiązaniem przypomnę treść 
może po większe troszkę będzie lepiej by państwo chcieli mamy tak mamy system plików w którym jest 16 KB rozmiar rozmiar fragmentu 4 kg a należy zaadresować plik o rozmiarze 58 KB to jest podana mapa bitowa 
należy podać nowy stan mapy bitowej jaki będzie poza adresowaniu tego właśnie w kilku o takich rozmiarach oraz wpisy adresowych i weź tym jak mówiłem dobrym rozwiązaniu mamy pierwsza rzecz na tak jak państwu to przedstawiałem na wykładzie Napisz sprawdzenie ile potrzeba bloków 
końcówka może być zapisana w formie pewnej liczbie fragmentów tuzinów będą jeszcze trzy fragmenty na czyli na dysku można zająć tyle miejsca Ile potrzeba bloków i fragmentów mimo że często plik jest o takim rozmiarze że ostatniego fragmentu może nie w pełni zębach wezmę to będziemy to sytuacje że 2 KB nie będzie zajęty w tym ostatnim fragmencie który jest 
zaadresowania Wejdź w związku z tym no to jest takie miejsce którego już nie można wykorzystać to to nazywamy efektem wewnętrznej Ottona litery w zaczynających wewnętrznych fragmentacji wolnej przestrzeni dyskowej No bo była wolna przestrzeń A teraz został wpisany ten plik 
ale nie nie całkiem to miejsce jemu przeznaczone jest przez b czy tego pliku wykorzystane to jest dobre właśnie to jest pełne dobre nie To widzimy nowy stan mapy bitowej z uwzględnieniem tych miejsc gdzie ten nowy plik został wpisany to widzimy cały blok tutaj są wpisane A to jest wpisana Ta końcówka czy czy trzy całe bloki i 
fragment I popatrz mi jak są wpisywane jak są wpisywane adresy i weźmie oczywiście zależy to od sposobu przeszukiwania miejsca na dysku są różne metody No to jest przyjęty najprostszy sposób czyli przeszukiwanie od przodu czyli na początku szukamy całych bloków Po pierwsze jest tutaj prawda i to będzie początek pliku potem następny wolny 
następny to czy to będą pierwsze trzy adresy bloków dyskowych a końcówka pliku No to będzie od adresu 5 12 16 20 i 5 na koncie 
Proszę bardzo odwrócenie uwagi na to co było na slajdach czy jest Aslan i tak dalej To jest właśnie zgodne z tymi regułami bloków najpierw cały bloki zgodnie z kierunkiem przeszukiwania a następnie to właśnie tą końcówkę w formie która może mieć do fragmentów ale one mają być w jednym bloku i kolejne i to musi być adres początkowy 
T5 tym wypadku może zobaczyć to jest adres początkowy do tego fragmentu od którego czytanie to się zaczyna czy wpisywanie się zaczyna na inne przykłady 
rozwiązań tutaj jest też dobre rozwiązanie też pełne wyjaśnienie też żywe wpisy w i węźle we właściwej kolejności 
kolejny przykład 
również dobrego rozwiązania to zobaczyć 
Natomiast teraz popatrzmy do przykłady na przykłady błędów które niestety się zdarzały 
to popatrz mi tutaj został wpisana końcówka została wpisana tutaj od adresu 8 
błąd polega No i właśnie pierwszy błąd że trzeba zacząć czytać wpisywać o całych bloków 
tutaj nie wiem dlaczego od 13 dopiero się zaczęło to wpisywanie gdy 
12 słów wolny prawda Czy można w całym roku zapisać Także tutaj tego zupełnie nie rozumiem tego rodzaju wpisu 
że najpierw zostały wpisane A najpierw 8 jest w ogóle wpisane to że zobaczyć to co to znaczy 88 to znaczy że tutaj 
propozycja jest taka żeby to wpisać te elementy tego pliku 
To by znaczyło że trzeba zamazać to co jest tutaj prawda pod adresem 9 
także tutaj zupełnie to 
No zwracam uwagę osobie która to przysłała żeby jednak jeszcze raz spojrzeć na zasady zaliczania tego do właśnie przydzielania fragmentów taśmy kolejne 
przykład A to co już przykłady pytań z kolejnego wykładu 
tutaj jest inny przykład złego rozwiązania w przyszłym tak tutaj prawidłowo zostały wybrane całe bloki fragmenty błąd tutaj polegał na tym że na pierwszym miejscu został wpisany adres końcówki a potem dopiero adres czy całych bloków czy jak coś będzie odczytać w tym momencie ten plik to by znaczyło tyle że najpierw odczyta 
końcowy fragment a potem dopiero wcześniejsze elementy No to czyli inaczej mówiąc odczyta zniekształconą informacje niewłaściwej kolejności dzieci jeszcze inne błędy polegały na tym że nawet sam zapis mapy bitowej był prawidłowo ale na przykład adres był tej końcówki podawany 4 
No będzie to znaczyło wtedy że przy odczycie to by został przeczytany fragment zupełnie innego pliku to który już wcześniej był na dysku tak dobrze na tym tą część dotyczącą tego zadania Może jeszcze tylko tutaj 
żeby zakończyć z takim wyjaśnieniem pamiętajmy o tym że plik to zapisywany jest jako ciąg bajtów i tak rozumiany przez system operacyjny nie widzi żadnych formatów tego pliku i istotne jest że z jednej strony to to jest ciągu zapisujemy na dysku bo z drugiej strony w tej samej kolejności 
informacja musi być odczytywana więc zgodnie z tymi regułami najlepiej zapisywane są kolejne bloki i to jest istotne no wrócę do tego dobrego rozwój w tym momencie 
te właściwe Właściwa kolejność no to jest taka to jest początek informacji i adres tego początkiem zobaczył musi być na początku i weźże dalsze informacje z tym bloku no to będzie to adres drugi dalszy ciąg to jest adres III Daj znać czy ta końcówka zaczyna się do adresu 5 na koniec czyli zanotować do jak bardzo ważną informację że kolejność adresów i weź 
musi odpowiadać kolejności informacji zawartej w tym w kolejnych blokach dyskowych i w tych fragmentów 
czy są może jakieś pytania dotyczące tego zadania tego zadania tego typu zadanie Na pewno będzie na tym końcowym sprawdzianie także bardzo proszę żeby sobie zwrócić na to uwagę dobrze to teraz może kilka słów o tym 
o tych pytaniach które były również 100 jesz bo wyrzucam te pliki te dużo miejsca zajmują 
No przykładowo co jest bardzo krótka odpowiedź na te pytanie ale jest no zaakceptowana Na czym polega wykonywanie poszedł w trybie użytkownika w porównaniu najadł kopiował m do tego przesłanego maila nam jakieś literówki są Ale co nie są w tych w porównaniu z wykonywaniem w trybie J zwykle procesy są wykonywane w trybie użytkownika 
W pewnych sytuacjach te same procesy wykonuje się w trybie jądra systemu operacyjnego tryb użytkownika jest trybem ograniczonym który działają aplikacje Piotra Jest typem uprzywilejowanym do którego komputer wchodzi na podczas wyszukiwania dostępu do zasobów sprzętowych i komputer przełącza się między tymi dwoma trybami to tutaj ty 
te informacje są prawidłowe niemniej nocą po prostu niepełne więc popatrzmy na to co ja państwu na wykładzie przedstawiałem 
nie chcę przekręcić na bok teraz jest to to są dałem państwu na wykład czyli zgodnie z tym co tu było napisane rzeczywiście zwykle procesy wykonują się w trybie użytkownika natomiast wtedy gdy proces zarządza pewnego działania strony systemu operacyjnego to wtedy do tego celu 
wywołanie funkcji systemowej czyli tego system do odwołania do systemu inaczej biust lepsze lepsze tłumaczenie polski ty tego co I wtedy 
wykonuje się fragment kodu jądra systemu operacyjnego który to można traktować jako obsługę tej funkcji systemowych tylko przy czym co jeździć tortem że ten kodu jądra wykonuje się w ramach tego samego procesu Czy ciągle To jest ten sam Pro też i stąd też dziś nie można powiedzieć że to wykonywanie z pewnym sensie uprzywilejowane o to będzie jeszcze dalej 
jest problem obsługi przerwań które w tym czasie mogą być W wielu sytuacjach one nie mogą być wtedy wykonane Dopiero gdy nastąpi powrót do trybu użytkownika Lord będziemy jeszcze dzisiaj nic nie mówisz natomiast tutaj ta podstawowa informacje dobrze drugie pytanie Co to jest blok kontrolny procesu Do czego służy i jak jest przed system operacyjny też jest od doktora sytemu operacyjnego związana z zarządzaniem 
każdy proces ma swój niezależny blok kontrolny to jest istotne reprezentuje Procesy te miał trakcyjny No i istotne użycie tego 
bloku kontrolnego dotyczy właśnie sytuacji gdy jeden proces zostaje wyrzucony z procesora ale jeszcze się nie skończył to trzeba wszystkie informacje niezbędne do tego żeby można było od tego samego momentu go dalej wykonywać wziąć znowu dostanie czas procesora bo jak wiemy we współczesnych systemach procesy dostaje poszczególne kwanty czas to jeszcze może 
przykład takiego No właśnie niezbyt dobrego a Powiedziałbym to złego złej odpowiedzi w trybie użytkownika bram przekazuje zadania wejścia-wyjścia do odpowiednich sterowników do jądra za pośrednictwem menadżera wejścia-wyjścia No to jest dobrze proszę dlatego że 
w trybie użytkownika on tego po prostu zrobić nie może w trybie użytkownika może wywołać funkcję systemową A te działanie właśnie będą wykonane w ramach 
kodu systemu operacyjnego 
także proszę na to zwrócić uwagę na pierwszym wykładzie mówię ten znak kardynalny bo 
proces w trybie użytkownika czyli na prezentujący pewnego użytkownika za jego życzenia on nie ma prawa dostępu do zasobów systemu ale może tylko prosić 
A ta prośba jest w formie funkcji systemu viaTOLL system operacyjny dopiero tą prośbę obsługuje i nie zawsze bo za mimo że czasami nie może No to będziemy mieć później także proszę zwrócić uwagę dobrze przejdziemy teraz już takim razie do nowego materiału to chyba że mają państwo jeszcze jakieś pytania to bardzo proszę w tym momencie 
myśli nie to przejdziemy do kolejnych elementów wykładu 
w jaki sposób procesy są tworzone do Wiemy już że proces to jest to co jest położone w celu wykonywania programu prawda żeby program był wykonywany bo być wykonywany No to trzeba otworzyć proces w którym będą właśnie wykonywane poszczególne rozkazy tego Pro ale on musi dostać swoje miejsce w pamięci i popatrz 
w jaki sposób proces jest nowy tworzą do tego celu służy funkcja systemowa fo 
funkcję ten wywołuje inny proces taki który już jest 
i wtedy ten proces który już jest to nazwały proces ten macierzystym a proces który w wyniku użycia tej półki polskie stworzony nas warto czasem potomnym to jest mowa o kolejnej strukturze systemu operacyjnego zwanej tablicą procesów wszystkie procesy które są w systemie muszą mieć miejsce pozycję w tej tablicy proces Każdy z procesów 
identyfikator używany jest skrót od proces it Cześć identyfikator dalej gotowy zmywać jak po wypłatę dotąd dostaje swoich identyfikator prawda przy czym to jest istotne że ten nowy proces 
w tym miejscu pamięci operacyjnej które Jemu jest przydzielany bo wtedy jest mu przydzielany miejsce pamięci operacyjnej wpisywane są informacje procesu macie Szymona bo i tak naprawdę powstaje kopia procesu macierzystego W wyniku tej funkcji systemowej Czyli to co było w tym obszarze pamięci procesu macierzystego przypisane do 
obszaru pamięci procesu potomnego tak jak skopiowanie pliku prawda na początku o kopiowaniu mamy to samo w obu tych miejscach na dysku starego i nowego pliku dane potem może się to zmienić no i oczywiście tutaj te informacje uzupełniające do tego przepisywania tego kontekstu 
bo wszystko jest No to jest i i wezmą przepraszam to spacja powinna być natomiast Cześć istotne proces macierzysty musi dostać identyfikator O tak czy inaczej mówiąc ma informacje o procesie który utworzył 
ma jego identyfikator no i ten potomek dziedziczy zarówno prawa dostępu do plików dzieli i dzieli Dostęp do tych wieści są już otwarte mają identyczne koło instrukcji danych stosu i tak dalej Zgodnie z tym co w sumie natomiast żeby wykonać Teraz inny program niż ten który jest w procesie macierzystym to tylko że spieszy nową funkcję o nazwy xd 
czy będzie to wyglądało tak że ta funkcja Częstochowa y i a argumentem będzie nazwa do tego programu który ten nowy proces ma wykonywać czy funkcja x jak służy do wykonania określonego już innego nowego programu i wtedy właśnie w wyniku działania funkcji y no ten program w formie gdzieś jest na dysku to właśnie z tego dysku zostaje ten program 
do pamięci operacyjnej jako tak jak wspomniałem sekcja tekstu taka jest na Co to jest wpisany w pamięci operacyjnej przydzielonej temu procesowi No i właśnie tutaj w pamięci obszarze pamięci tego potomka zostaje 
umieszczona kopia pliku wykonywalnego rozpoczyna się jego wykonywanie nawet wtedy gdy zostanie czas procesora bo tak jakby to wszystko zostaje zrobione to on będzie z tym stanie gotowym czekał na przydział czasu procesora przydział dokonywany przez system operacji czy inaczej mówiąc było wcześniej w obrazie pamięci 
dobra kopia No to tak kopia zostaje zamach popatrzmy dar 
Czy można powiedzieć że proces to jest jednostka wykonywania programu w systemie Unix zawiera instrukcję programu oraz jego środę to przejdziemy do tego co to cały dobrze miałem pod pojęciem środowiska co jest istotne w trakcie rozpoczęcia sesji 
jądro systemu operacyjnego przydziela każdemu użytkownikowi 
interpretator identyfikatora poleceń czyli tego Shella prawda Tylko ten żel nazywamy login żaden To jest ten który wujek sesję użytkownika A jaki to jest Shell to ta informacja jest zawarta w tym pliku Basiu czy zapiszą Slash Beck chcesz czas budę tam są wszyscy użytkownicy wymienieni w tym pliku 
pas wód 
i tam jest dla każdego użytkownika wpisany jaki ten blogi Shell będzie uruchomiony gdy zostanie otwarta sesja etc bekslasz as2 SWD SWD Dziękuję ale to proszę zobaczyć tam państwo znajdę jak sobie w wolnej chwili włączą 
idą bezpośrednio pod katalogiem domowym jest Nie wiem właśnie katalog etc A o co się ten katalog o to mi chodzi że ten katalog ATC czy jest bez katalogiem domowy nie nie on jest bezpośrednio pod butem a po drutem A dziękuję proszę a to dla już dla przypomnienia to wrócimy na chwilkę to 
Panie to jednak muszę jeszcze tutaj inny ściągnąć to będzie część pierwsza część druga to było 
ci zaraz to pokażę żeby już 
tutaj O proszę niech pan spojrzy jak to wygląda 
a i to jeszcze lepiej wpadł w ten w tym przykładzie który wcześniej przedstawiali Dziękuję Czyli jeszcze raz ten plik bazy w d zawiera informacje o wszystkich użytkownikach z 
No i w tym właśnie informacje o tym jaki Shell będzie służył przy otwieraniu sesji i on może tam być programem który uruchomiony jako proces będzie wtedy gdy ktoś wydaje polecenie do którego wynikiem ma być utworzenie nowego proces do jakiegoś programu prawda No to wtedy właśnie ten login Shell to już wrócimy tutaj 
to może wyrzucimy 
wtedy właśnie ten Shell będzie tym procesem macierzystym który będzie tworzył nowe proces prawda 
przypomnienie g-tech nas proces macierzysty albo potomek albo przodek to jest ten właśnie w tym wypadku to będzie ten Shell On tworzy wiele procesów potomnych każdy proces ma swój identyfikator który jest jeszcze sformułowanie skrót jak się jak się używa do w odniesieniu do 
przodka więc pójdę to jest proces z danego A to będzie Parent proces itd odniesieniu do tego procesu przodka żeby rozróżnić teraz No i jeszcze taka informacja No bo każdy od razu ma pytanie No to jak to w ogóle jest No czy jest jakiś musi być jakiś proces pierwszy też ale będzie generował prawda No i jest taki proces o nazwę mafii nic 
Jon ma identyfikator równy 1 i on jest między innymi przodkiem właśnie tego login Shell o tym będziemy mówić sobie jeszcze dzisiaj ja będę wyjaśniał jak co się dzieje przy tym rozpoczynaniu cześć 
to czy jest jeszcze informacja że zwykle procesy są związane z określonym terminalem na którym się pracuje użytkownik pracuje czy administrator zamiast są też procesy które wykonają wykonują usługi systemu operacyjnego ale też co jest ciekawe one są wykonywane w trybie użytkownika jony są nazywane procesami demonami Ryszard wykonywanych 
to polega to też dzisiaj powiem i one nie mają przydzielonego terminala i nie są związane z żadnym serem 
czy nie ser będzie icod kiem ale właśnie sam system operacyjny będzie generował popatrzmy dalej 
Czyli jeszcze raz proces to jest program ale w trakcie wykonywania gdy jego wykonywanie tego programu został rozpoczęty jeszcze się nie wykonana zakończyło jak zjemy to co jest w obszarze pamięci to jest przede wszystkim kod programu ale też miejsce na szereg informacji związanych z działaniem tego programu 
czyli tak tworzenie nowego procesu jeszcze raz to nosi nazwę rozwidlenia po angielsku fork stąd ta nazwa jaki tyle spada Fox wprost i ten nowy proces że przekształcany w pracy wykonując określone polecenie 
z użyciem nowa cyklu systemowy y od angielskich słów których klimat Cześć właśnie teraz istotny dziedziczony jest przez ten proces środowisko której obejmuje basico tekst o środowisko informacje o właścicielu o grupie standardowych strumieniach do których Przemęczony jest terminal otwarty w katalogu zmiennych globalnych czyli popatrzmy gdy 
mamy protest przodka i to co tu jest napisane To jest jego pamięci operacyjnej przydzielonej temu procesowi przodka tam jest to środowisko w tym teraz mówię programu no i miejsce na zmienne lokalne wyniki i tak dalej funkcja systemowa Fogg powoduje że powstaje nowy procent dostaje nowy obszar a do tego obszaru pamięci wszystko to dostaję przekopiowanie 
będzie funkcja językowa xd której argumentem będzie pewien program nazwa pewnego programu to prostu znaczy środowisko zostaje to samo natomiast będzie nowy kod programu zamaże ten stary no i oczywiście jak nowy kod programu to i będzie potrzebował co innego w tym miejscu przeznaczonym na zmienne wyniki i tak że proszę to jest bardzo ważny schemat który ile 
Jak to się dzieje gdy tworzony jest nowy Cross 
Signal 
No służą do informowania procesów o pewnych zdarzeniach asynchronicznych czyli to może widział plany z zakończeniem procesu prawidłowo się kończy 
wykonuje się funkcja systemowa exit wtedy gdy właśnie wszystkie instrukcje programu stal prawidłowo wykonane dane mogą być wyjątkowe sytuacje przez system natka próba dostępu do niej do danego obszaru pamięci życzę takich sytuacjach ten proces zostanie zakończony mogą być błędy przy wykonywaniu funkcji systemowej 
odpisali do potoku który nie czyta ale są także sygnały wysyłane przez proces w trybie użytkownika związany z interactions termin ale i tak że państwo jako użytkownicy mogą wysyłać sygnały do procesów używając polecenia Kill każdy się spać to domyślać co to oznacza takie polecenie Kill ale składnie albo podawać należy po opcji s nazwę sygnału 
zakres Co oznacza albo albo płoną serce numer sygnału tego Signal mają swoje nazwy i swoje sygnały No i oczywiście trzeba podać właśnie do tego celu przydaje się identycznie tato proces za chwilkę opowiem jak zobaczyć jakie są identyfikatory procesu które państwo uruchomili czyli tutaj to można wysłać do jednego lub pewnej liczby można wysyłać z klawiatury Jak wygląda obsługa 
typowe to jest zakończenie procesu Ale są pewne sygnały które mogą być ignorowane ale też jest możliwość aby za wykonane określona funkcja użytkownika to do tego celu służą do płaszczyzn zestaw poleceń który jest w Helu 
w którym możemy traktować to jako taki język programowania Shell pozwalają na taki działa natomiast jest istotny sygnał o numerze który powoduje bezwarunkowe zakończenie procesu to sygnały są już obsługiwane przez samo piotrostalu pracy natomiast Gdyby taki system był wysłany w momencie gdy akurat proces wykonuje się w trybie jądra 
czyli wykonajcie fragment kodu jądra systemu opartego na to ta obsługa tego sygnału nie będzie od razu tylko dopiero gdy skończy się to wykonywanie typy jądra i gdy proces wróci natomiast gdy wykonują się instrukcje do tego programu użytkowego aplikacji Czy w tym słownika to od razu jest bezpośredni obsługiwanych językach 
No i właśnie wspomniałem typowe działanie po wysłaniu sygnału No to jest kończenie wykonywania procesów to jeszcze raz mają państwo składnię tego polecenia kill 
informacje o przykładach nazw i numerach sygnał 
taki można pojeździć dywanowy typowy Czy grał to jest numer 15 jak tutaj nie wpiszemy żadnego żadnej opcji z tych wymienionych tutaj No to będzie polecenie Kill wyślę sygnał 15 który może być waszym przechwycony zignorowany lub zablokowany natomiast ten twojego nie można przechwycić darować zablokować to jest sygnał o numerze 9 on ma nazwę heal 
ma nazwę sikker czyli to jest numer i nazwa które tutaj są państwo można użyć tutaj w tych opcjach to przecież jak wspomniałem ten ma charakter i jak tego napiszemy Kill i numer identyfikator procesu No to będzie ten wysłany tutaj mamy inne przykłady 
henga to związane z zerwaniem łączności interapp państwo też mogą taki wysłać kontrolce quiz dla programistów istotny sygnał dlatego widzimy kontrol weksle Szkoda dlatego że on powoduje zrzut pamięci 
wziął dalej z tym procesem Czyli on jest niezbędny przy użyciu gdy chcemy użyć i papier to ta no bo wtedy potrzebny jest zrzut pamięci żeby Darek miał na czym pracować 
Hej mamy ten Kill i ten 
to są te przykłady nas 
a teraz Co się dzieje gdy ten proces się kończy to też nie jest takie proste No bo mamy pamiętajmy o tym mamy dwie struktury jedna struktura to blok kontrolny procesu druga konstruktora to jest ta tablica proces 
każdy proces na kończy się w naturalny sposób gdy się wykonać wapnia instrukcja programu prawda to wtedy kończąc się wykonuje funkcję exit stanu zwanych dostanę Zombie zwalnia swoje zasoby oczyszcza kodeks Czy można prosić o Krzyśka to miejsce pamięci operacyjne blok kontrolny zostanie oczyszczony zamknięty ale ciągle taki proces znaj 
jeszcze zajmuje miejsce w tablicy procesów 
i następnie to jest istotne że proces macierzysty czeka na zakończenie swojego potomka i on wtedy wykonuje funkcję systemową Wojtek Natomiast sam system operacyjny jądro szuka potomku takiego procesu które są w stanie Zombie Jeśli znajdzie to przekazuje ten identyfikator tego potomka i parametrów Dzięki do procesu macierzystego 
tym parametrem przesłanym może być tak że no właśnie informacja o błędzie jakim który powstał w trakcie wykonywania tego procesu przypada jak wspomniałem potential będzie obsługujący sesję tym to zobaczył tylko ten szary wyświetli tą informację jaki byłby na przykład jakiś błąd który pozostał to jest do macierzystego on wtedy jest budzony i dostaje informacje o 
o zakończeniu któregoś Potoku 
i wtedy dopiero system operacyjny zwalnia to miejsce w tablicy proces jest o tyle istotne że tablica procesów skończony robię związku z tym jakby takich Zombie których nie udało się oczyścić z tablicy procesu było 100 No to 100 miejsc jest zajętych No i w tym może powstać sytuacja że nowego procesu w ogóle już nie można utworzyć No bo jest 
miejsca w tablicy procesów sądowych rocznie zostanie utworzony czyli polecenie nie zostanie wykonany że to jest istotne tutaj nie nie miejsca w tablicy procesu Dobrze przejdźmy teraz do jak Państwo mogą uzyskać informacje o procesach które działają sami wywołali kto działają w systemie do tego celu służy polecenie 
status PS 
biuro pozwala właśnie uzyskać jedna rzecz informacje o tym jakie są procesy a także o tych procesach szereg informacji no takie w życiu które zwykle stosujemy to jest PS typowe opcje wyświetla informacje takie jak identyfikator proszę samego użytkownika identyfikator procesu identyfikator także procesu przodka 
uruchomienia i szereg innych dla informacji i danych o tym procesie a tutaj mamy na tym slajdzie jest bardziej dokładna informacja to będzie również omawiany ćwiczenia 
popatrzył to przykłady różnych opcji tego polecenia proces status 
e podanie listy wszystkich procesów w systemie 
podanie pełno i pełniejszy i może dawno za informacji o to że za stąd takie typowe użycie f ale można no to jest użyteczne dla administratora zobaczyć co z określonego do terminala został uruchomiony czyli tutaj identyfikator terminala dla spotkać albo co 
dany użytkownik jakie procesy uruchomił czyli to identyfikator użytkownika najpierw widzimy opcja Te terminal u Józef przypadku użytkownik Jak już szuka do f to już nie ma sensu chyba podawać to prawda proszę ja nie no ale wie pan jak jak tych procesów jest 200 to jest wygodnie i zobaczyć tylko każdy się tyle 
uruchomił sprawdzałem tak w sensie ale czy jakby wpisać tak to czy wyświetliło mi się te utworzenie wszyscy Aha no to jeszcze ja to podaję to z punktu widzenia administratora bo jeszcze wszystko zależy administrator może ograniczyć prawdę prawa tutaj także tutaj to powiedzieć prawda ja tam mówię techinformacje jakby każdy z państwa była dni 
na swoim komputerze to każdy jest administratorem prawda że tak to wygląda dobra ale teraz popatrzmy jak zachęca właśnie że pani sobie próbowali zobaczyć Dlaczego nie Nie wszystko mogę powiedzieć bo każda wersja system systemu operacyjnego No może się z jakimiś tam drobiazgami różnić właśnie sposobem działania opcji także odsyłam też do Men tego 
Manuela elektronicznego prawda tam jak państwo Wpisz Omen PS No to an spacja PS no to wtedy zobaczę jaki tam u siebie prawda bo każdy może mieć inną wersję tego systemu linuksowego przykładowo czy czy korzystać z serwera już takiego komercyjnego tenisowego Dobrze idziemy dalej Co Papież przykład polecenia PS 
gdy nic nie podamy tylko bez żadnych opcji to popatrzmy co zostały pierwsza że dostaniemy tylko informację związanych z określonym terminalem o tym swoim nad tym się pracuje czyli swoje procesy się zobaczy 
i tu widzimy że identyfikatory procesu 
Iwa Dostałem też państwo informację na jakim terminale pracują to jest identyfikator terminala to i czasowe informacje jakie polecenie wywołało dany proces to ja pracowałem podrzucają Gillette Packard A tam był System ten integrator to poleceń Shell stąd nazwa frajerska chyba mają bewegen buzzfeed.com zwany tak ale to każdy zobaczy PS Ja zachęca 
sobie ćwiczeń po prostu tego typu Cześć będą państwo mieli w formie laboratorium i to mają państwo informację co ten który z klubu znaczy nie chcemy swój jakiś proces programu który się nie chce zakończyć sam no to mają państwo ten identyfikator wysyłamy polecenie Kill z opcją 9 identyfikator podany i już powinien się zakończyć 
Proponuję takie ćwiczenia sobie robić a tutaj widzę państwo przykład 
PS z opcjami f 
To jest ten sam przykład sobie robiłem mówiłem acardzie to widzimy tak mamy ale właśnie mamy proces i nic który ma widzą patrzę identyfikator 1 
mamy Corsair ma identyfikator 505a widzimy jeszcze taki a cześć tatę Widzimy tutaj Kto jest przodkiem tego procesu karuzela 1 A który to jest 1 i stylizator że on jest przodkiem tego Grzelak który obsługuje następna rzecz czy jeszcze ilustracja innego 
który wywołuje proces init to jest taki proces wykonujący program get i y to jest program który próbuje 
utworzyć łącze do terminala i to widzimy Do jakiego terminala 
A może mu się udać może nie jak na przykład ten terminal nie będzie włączony wykorzystywany No to mi się nie uda Ale on próbuje 
i ten i próbuje do każdego terminala takie łącze utworzyć poprzez wywoływanie tego procesu kręciła i tutaj znowu państwo mają konkretne informacje ale również Zachęcam do do tego manuala elektronicznego żeby coś zobaczyć tam to wszystko jak danym temu to wygląda No każdy może mieć Przepraszam Aż tym poleceniem Here 9 można 
proces zakończyć ten pierwszy Czy to było z powodu jakiś błąd w i nikt nie będzie to system przestać działać operacyjny to zwykle tyle zblokowane żeby ktoś sobie takich zabaw nie robił prawda No nie no zwłaszcza wszyscy No jak jak pan sam będzie administratorem bo to proszę znowu próbować może się uda może się nie uda w przypadku takim komercyjnych to jest 
Żaden z użytkowników nie ma takiej możliwości jak pewnie w tych pewnie wielu dystrybucja właśnie zablokowali ale możliwe że w samym czystym jądrze zostało No więc jest to już nie zaglądałem tam będzie pan też Ustaw jak ostatnio Tak patrząc na to jak ostatnio modyfikują to jądro to raczej chyba to zabezpieczyli No bo to jest to jest do Pragi przerwanie pracy systemu to więcej 
będę o tym mówił takie przerwanie niespodziewane pracy systemu może oznaczać że że potem szereg informacji w ogóle zostajesz zgubionych także bezpieczne No tak to jest w ogóle bardzo nie nie tylko dlatego że dodam Zamknij się to można uruchomić by na nowo prawda ale się okaże że po tym uruchomieniu informacji zostało struktury jądra zniszczony No także tutaj 
Musimy troszkę No na razie parę tych struktur poznaliśmy dobrze ale Idźmy dalej Proszę robić ćwiczenia u siebie państw mogą próbować to zlikwidować ale nie zachęcam na są ciekawsze rzeczy do zrobienia Dobrze idziemy dalej Shell wytarłem palec tata czyli to jest ten login Shell to jest ten 
obsługuje sesję działa jako proces No i właśnie oni z tym procesem macierzystym prawie lu potomnych proces 
są takie trzy typy poleceń teraz wracam już do poleceń bo 
polecenie może oznaczać prośbę o wykonanie pełnego programu to wtedy ona zawiera plik wykonywalny jest kod wynikowy skomplikowanego programu gotowy do uruchomienia no to wtedy właśnie ten nowy proces będzie ten program wykonywał czy kolejną znowu te dwie funkcje systemowe najpierw volt potem x 
może to być plik wykonywalny tak zwany skrypt który zawiera ciąg poleceń dla Shella nazwany skryptem i trzecie na to powinienem zrobić odstęp wewnętrzne po Shella Co to znaczy wewnętrzne polecenia Shell 
pewien z każdy Shell zawiera pewien zestaw poleceń które on sam obsługuje bez tworzenia nowego procesu czyli w ramach takiego wewnętrznego po Shella tylko ona się po prostu fragment Czeladź nowy proces w ogóle nie powstaje na jeśli napiszemy sobie skrypt do tego też służy język który też nazywa się często określonym celem No to tam mogą być 
zawierają te odwołania do plików wykonywalnych ich które nie zawierają także tutaj tak należy na to patrzeć ale teraz Co się dzieje gdy mamy do czynienia z prośbą o wykonanie określonego programu 
No to właśnie tutaj to co wspomniałem wykopiesz to tak usystematyzowane proces 3 lata czy sesji użytkownik wydał polecenie którego wynikiem ma być Uruchom program No to basiel Shell wykonuje foch Jon usypia A teraz to jest wykonywana funkcja y z argumentem tego i wtedy ten nowy proces będzie wykonywał określ 
aż to wykona i to pamiętamy że ważne jest żeby gdy program zostanie zakończony informacja o zakończeniu trafiła do Shella wybudzony a państwo to idą w ten sposób że gdy polecenie się wykonało pojawia się znak Zachęty No to jak on się obudzi No to zacznie działać od początku czyli od wyświetlenia tego znaku zachęty do wydania kolejnego poleceń powiedz 
tak to działa 
też typowe działanie bo jeszcze poznamy troszkę inne działanie teraz parę słów o czterech różnych noszę coś program i tych programów jest wiele różnego typu napisanych przez różne zespoły programistów pierwszy taki oryginalny był selber na ojca zwykle No właśnie szelkach 
muszelka jako coś Co oznacza Shell za pośrednictwem której do toczki polecenia użytkownika No trafiają do są obsługiwane jako procesy przez jądro systemu operacyjnego w to ta nazwa Shell bardziej zaawansowany znasz się bardziej zaawansowane Korna ale tutaj z kolei mamy selfie który powstał 
Berkley software od Kalifornii Chelsea No i mamy też venegen Shell Shell do tych Shella jest 2 a teraz jak jest główne zadanie Shell 
interpretowanie poleci czyli użytkownik wprowadza polecenie 
Shell czyta wiesz w polecenia przetwarza wiesz polecenia tworzy proces myśli trzeba no bo jak będzie polecenie wewnętrzne to to się sam do wykonania prawda to boli a system operacyjny wykonuje tę pracę 
też główne działa jeszcze 
czy jeszcze raz Shell odczyta wpisane polecenie wiemy że wyświetla Zachęty użytą w Plaza polecenie jeszcze to polecenie przetwarza informacje w poleceniu tworzy proces jeśli trzeba Unique z wykonuje ten proces A wiemy że że w tym czasie usypia proces zostaje zakończony zostaje obudzony i wyświetlić dowód nam dla zachęty 
tutaj popatrzmy na szereg takich podstawowych funkcji które przepraszam 
po coś z Łeby podkreślam 
jeszcze raz w prawo pa zły buzię wcisnąłem dobrze popatrzmy na podstawowe takie typowe funkcje współczesnych programów przelanie tego że tak twoim pierwszego ja pierwsza rzecz podstawowa to jest ważny interpretacja i utworzenie nowego procesu W celu wykonania określonego Pro zażyczył użytkownik ale właśnie są też polecenia 
albo inaczej mówiąc wewnętrzny tego sera dostarcza też język do pisania skryptów 
pozwala ustawić środowisko pracy poprzez ustawianie pewnych zmiennych 
konfiguracyjnych 
pozwala na przytoczyć wcześniej wydane polecenie i je edytować No w przypadku pracy administratora to to gdy polecenie jest długie nośnym wiesz polecenia jest dość długi na to można jej przywołać tylko jakiś prawny zmienić a nie wypisywać od początku przeadresowanie wejścia-wyjścia albo inaczej przekierowanie w literaturze w polskim języku 
sondowania są używane Na czym polega standardowe strumienie wejścia i wyjścia są następujące strumień wejściowy to jest terminala ten dipolowy a wyjściowy są 21 to jest standardowe gdzie Wyniki obliczeń są pokazywane lub wyniki pewnego dział brawo też wyjście standardowe jest jeszcze wejście diagnostyczne 
pojawiają się wyniki po błędach 
Czyli mamy 3 strumień 122 wyjściu i do wyjściowe strumienie standardowo to są w torbie nie na ekran terminal natomiast przeadresowanie pole że można sobie zażyczyć żeby informacje do tego polecenia były kierowane z pliku a nie klawiatur ażeby informacje wyjściowe były kierowane do 
pliku a nie da ek 
generowanie nazw plików polega na użyciu pewnych znaków metaznaki Zakładam że to już państwo powinni mieć na ćwiczenia umysł żywienia łączenia w potop co to znaczy chodzi o to żeby wynik jednego polecenia przesłać jako drugiej wejściowy polecenia drugiego żeby bezpośr te informacje bez tworzenia jakiegoś pliku No można to zrobić 
adresowanie bez wyświetlania na ekran żeby państwo sami musieli to przepisywać tylko bezpośrednio informacji z jednego polecenia do drugiego zostaną przesłane chyba czy siak zapisania pliku w wyniku polecenia proszę od razu do pliku wyniku polecenia bez jakby przypisywanie tego odręcznie tak dokładnie czyli powiedzmy 2 polecenia które chcemy wykonać i chcemy 
wynik tego pierwszego trafił jako wejście tego drugiego umożliwienie przetwarzania w drugim planie tak zwane nieinterakcyjna ale o tym też za chwilę będziemy 
teraz jest lajkuje ilustruje jak interpretowane są polecenie 
to mamy przykład prostego polecenia LS z opcją l plik ze znakiem zapytania test ze znakiem zapytania ale w cudzysłowie 
że działa w ten sposób państwo to wpisali prawda szedł sobie to odczytuje i wpisuje do wewnętrznego swojego bufora jako ciąg znaków prawda tak jak to widzę tak ale części szczotka on rozpoznaje spację 
między tymi słowami 
i dzięki temu może rozróżnić słowa 
czy oddzielnie słowo NS oddzielnie z domu kreska l oddzielnie słowo pić ze znakiem zapytania oddzielnie z tych testy znakiem ze znakiem zapytania w cudzysłowie ale że on to interpretuje od końca i szczególności szuka znaków specjalnych w takim specjalnym coś państwo wziąłeś ten znak zapytania gwiazdka to inny i teraz tak jeśli będzie natrafi na cudzym 
to jest widzimy to jest znak zapytania w tym słowie objęty cudzysłowiu to ten meta zda w którym jest znak zapytania nie będzie jemu nadane zadrżały specjalne znaczeń Czyli będzie po prostu znak traktowane jako znak ascii reprezentujący znak zapytania 
ale teraz w tym słowie mamy bez cudzysłowu No to tutaj właśnie ten znak zapytania zostanie potraktowane jako meta znak czyli taki który należy rozwinąć 
znak zapytania oznacza jeden dowolny znak ale tylko 1 bo gwiazdka wiemy że oznacza ciąg dowolnych znaków jako jako jako 
No i on wtedy musi to rozwijać i to widzimy jak on rozwija podaje próbuję tutaj wpisać kolejne znaki ascii to przykładowo znalazł znak 123 czyli rozwinął to plik ze znakiem zapytania na plik 1523 takie tam w ogóle istnieje i w ten sposób powstało dopiero po nie po rozwinięciu meta znaku które należy zrealizować 
tworzy procent to realizuje usypia 
No i jak skończy jak ten proces się skończy No to jest obudzony i zachęca wysyła ten znak Zachęty następnego do następnego plecy 
zostali państwo bardzo ważne to na co chcesz rzucić okiem bo właśnie te odstępy są niezbędne jeśli ktoś zapomni odstępie No to on inne słowo wczyta tutaj tego nie zrozumiem prawda Także tam porobię dokładnie to i coś innego niż chcemy na przykład jak przepisujemy zmienne to będę ostatni miał taką sytuację że jak napisałem tam ich spacja równa 5 to to był błąd bo potraktował o x jakąś instrukcję no 
Dokładnie tak bardzo zwracam uwagę bardzo dobrze Pan to też na to zwrócić uwagę ważne jest pilnowanie prawidłowego zapisów zgodnie z z tym jak należy To wpisywać prawda czyli inaczej prawidłowa składnia poszczególnych PiS dobrze popatrzmy te 
a nie tak 
Czyli jeszcze raz rozróżnienie tych różnych typów Polacy mogą być polecenia wewnętrzne Shella No to ja przykładowo konserwa żoną wszedłem na tam pewnie też na te na pewno też są ale też się szereg innych Cześć Darek Tour czyli wtedy nie tworzony jest nowy ty po prostu Shell sam to polecenie wykonuje No ale jeśli są 
No systemu Unix No to właśnie ls-mod to są te przykład 
Oczywiście te polecenia wbudowane czy wewnętrzne No to zależy od tego kto tego szefa napisał i ma obrożę wersja strzelał być ich te podstawowe będą pewnie te same ale mogą być niektóre inne ale policzenia zewnętrzne są realizowane przez Uruchom procesu dla oddzielnego programu no i wtedy ten nowy proces moich butów złożony 
Trzeba określić gdzie on jest ten ten program który ma być wykonany jako proces na przypadku gdy piszemy No to trzeba to ten skrypt musi mieć prawo do czytania i wykonywania czy ten X tam na końcu obsypać to już więc sprawa z dostępu 
samodzielnie państwo że takie skrypty 
a teraz popatrz na te dwa tryby dwa sposoby wykonywania Porec 
standardowy zwany też synchronicznym albo przetwarzaniem w pierwszym planie po angielsku pobrał No to jest tak jak wcześniej z pomiarem login Shell wyświetla państwu znak Zachęty państwo wpisują polecenie z prośbą o wykonanie pełnego programu no to ten Shell tworzy test woda pojawia się proces potomka 
Shell wtedy usypia 
czeka aż ten potomek się wykona i dopiero jak ten potomek się wykona i zostaje przesłana informacja że idę ten potomek o takim i takim identyfikatorze się wykonał Shell wyświetla znowu sam Zachęty Państwo mogą nawet polecenie Widać to na ćwiczeniach tak jak typowy takie polecenia które używamy No to nawet się tego nie tak szybko to jest wykonywane natomiast na pewno tańsze mieli takie przykłady 
specjalnie wymyślonych poleceń które długo trwają można określić ile mają trwać żeby to przećwiczyć jak to wygląda popatrzmy teraz na drugi przykład który nazywamy przetwarzaniem asynchronicznym albo przetwarzanych w drugim planie a po angielsku background tutaj 
też Shell wyświetla znaki gotowości do przyjęcia polecenia ty znak Zachęty znajduje ten wiersz polecenia i uruchamia nowy proces 
ale nie jest usypia tylko od razu wyświetla znak gotowości czeka na następny polecenie 
czyli w ten sposób jeszcze jedno się nie skończyło 1% się nie skończyła państw już mogą wywołać następny następny następny Czyli będzie wiele procesów przez wywołanych przy tym trybie asynchronicznym albo begro niespecjalny z dach ampersand który służy do 
stwierdzenia że użytkownik sobie życzy żeby to jego polecenie uruchomiony proces żeby to działało właśnie w tym drugim planie 
za chwilkę będzie też prościutki przykład no właśnie teraz popatrzmy na przykłady przykłady różnych prostych poleceń No właśnie polecenie pa Przepraszam czy jakaś literka terminala powinno być mamy takie polecenia prosty jak hu albo leżę no to interpretator Shell wykonuje rozwi 
potem w punkcie Weight Natomiast w odniesieniu do tego procesu potomnego jest funkcja systemowa egzek 
Proces ten wykonuje określony program który był umieszczany w wierszu polecenia i do Predator czeka na zakończenie na podatku zakończeniu przykryj kolejne policji 
No i tutaj przypomnienie że w przypadku poleceń wbudowanych 
to interpretator na dużą zasadzie słowa tego języka programowania który jest Shell interpretator obsługuje bezpośrednio bez tworzenia a tutaj popatrzmy właśnie zmiana czyli to przeadresowanie tylko czy przekierowanie zmiana standardowego pliku wyjściowego ls.com strzałka lista 
Co się wtedy dzieje Najpierw ten proces potomny do który to wiek ma wykonać to polecenie LS najpierw tworzy listę czyli plik prawda 
No teraz tak może się to powieść lub nie No jak nie będzie wolnego i węzła albo nie będzie miejsca na dysku No to nie utworzy tego nawet ale Przyjmijmy że otworzy No i teraz ten plik lista utworzony to zamyka standardowy plik wyjściowy a powiela deskryptor nowego na tym polega to przeadresowanie czy też przekierowanie żeby też drugi by trafił nie na ekran tylko do tego pliku wtedy 
i wynik przesyła po prostu do tego kolejny przykład wykonywania polecenia w tle to duże na samym końcu jeśli użytkownik sobie chce żeby administrator też żeby dane polecenie Czy tworzony proces był wykonywany w tle 
czy background to na końcu polecenia trzeba wpisać to jest znak ABS 
i tutaj widzimy przykład polecenia grep nie wiem czy patrz to miejsca ćwiczeniach czy nie To jest takie polecenie nazywamy to bardzo mocne polecenie przeszukiwania Szukając w tekście to jest polecenie dotyczące plików tekstowych według tekstową proszę tekstowo to polecenie grę w przeszukuje pliki tekstowe 
Zosi przeszukuje pełnotekstowe w sensie że całą treść tak tak tak tak no szuka tego wzorca to to będzie znak meta znak czyli o wartości można powiedzieć szuka słów wszystkie wszystkich userów prawda ze wszystkimi tutaj tymi tam cyferkami który tam będzie Dwa większe mogą być Zachęcam do prób za 3 lat proszę pierwsza sprawdzić w manualu swoje 
unixa opis tego polecenia grep bo tam będzie dość długi ten opis żeby się z nim zapoznać a potem dopiero go że tak powiem używać tak jak zwykle właśnie mam pytanie jeśli by chcieć użyć wzorca który zawiera spację to wtedy trzeba dać bekslasz spacja czy atom Proszę sprawdzić tempomat czy po prostu bo samym spacją bo to traktował jako dwa osobne dobrze pan mówił tata 
to będzie wtedy traktowany jako wzorzec taki że jest user spacja 
i dowolny znak dowolny ciąg znaków w lotach ale ale dla porządku Proszę no jak mówię dobra ją te swoje różne wersje tenisowych mają swoje mówimy chimery i i dobrze z tym pliku manual to sobie dokładnie sprawdzić czyli w tym manualu elektroniczny dobrze Albo patrz teraz jak to działa Ważne jest to co wspomniałem że interpretacja jest od końca 
dokonywany przez dokonywana przez Shella czyli ona jak już zauważy ten znak pampersa to jest znak przetwarzania w tle i on ma taką zmienną lokalną to wtedy usta i gdy już to wszystko wykona to sprawdza wartość tej pętli jeśli No właśnie w tym momencie będzie ona ustawiona i czy jest ustawiona to to włączyłeś tylko od razu zaczyna działać można też zaczyna działać współbieżnie 
Jestem który uruchomił wyświetla Ten znak Zachęty a tutaj popatrzmy na polecenie z Potokiem 
tutaj Ja przygotowałem taką ilustracje zaraz pokażę tutaj z boku 
mamy polecenie LS z opcją l to jest oznaczenie potoku ta pionowa kreseczka Workout czyli to jest polecenie wędka dokonuje takiego zliczania ile tam był w tym tekście który byłby wygenerowany sprawdza ile jest znaków Ile jest słów ile wierszy 
a tutaj chcemy żeby wynik polecenia LS trafił bezpośrednio do polecenia Hubert Klaudia to informacja wejściowa i tak żeby to policzył że podał nam informację w jaki sposób to się odbywa co tutaj z prawej strony narysowałem Shell ja w to grałem i tapetuje od końca czyli najpierw utworzy proces Word Count 
obie funkcje Fog x jak będą użyte 
i ten proces Webcam utworzy Potok Rzecz polega na tym że on musi otworzyć odpowiednie łącze i skorzystać z pewnego bufora w pamięci operacyjnej Nie no bo gdzieś te informacje muszą być wpisywane i odczytywane i wywołuje funkcję Fortwo jego potomka i dał funkcja y I będzie potomkiem lsl będzie 
widzimy mamy proces macierzysty utworzył potomka Workout a teraz ten utworzy nowy proces lsl a on usypia w tym czasie czeka robi to co miał zrobić 
wpisuję wynik do tego Potoku 
kończy działanie więc budzi Webcam ten się budzi odczytuje sobie tą informację w tego potoku dokonuje wyliczeń do tego co robi jak to kochana wyliczeń No to wyświetli to na terminal a skończy działanie to Shell będzie gotowy do wydania nowego polecenia przyjęcia nowego polecenia Czyj to widzę państwu takie nazwy używane w administracji gdy skryptów 
oznaczenie który to plik chodzi 
czy Pixar deskryptor pliku standardowy to odnoszący się do terminala prawda a powiela dyski piątego potoku do pisania prawda tak Żeby to do pewnego dupa Radka się wpisuje ten odczytuje wykona obliczenia ale co jest ciekawe że właśnie mamy tutaj widzimy taki podwójny etap tworzenia procesów prawda ten jest macie ten jest potomnym A to jest jeszcze jego proces 
Tomek czyli można wyjść to jest wnuk Szela można powiedzieć prawda przygotowałem taki przykład wydają się dość ciekawy to 
a jeszcze mamy troszkę czasu przed końcem tej części popatrzy koncepcję wątków co rozumiemy przez wątek Monte ktoś sekwencja rozkazów i są można być takie Ogólnie dwa podejścia do pisania oprogramowania można pisać jako tako jeden program będzie wykonywany jako jeden proces dowiemy wtedy proces jednowątkowy ale 
pisać całe oprogramowanie w formie mówimy też procesu wielowątkowego albo inaczej mówiąc rozwiązania zadania informatycznego w formie wielu sekwencji rozkazów Które ze sobą współpracują 
ale istotne jest to że one wykonują po sam wspólne spanie informatyczne są czasami używana w literaturze nazwa to czy zwierzątko Rzecz polega na tym że one wtedy wszystkie te wątki z jednej strony w wykonywaniu są traktowane jako oddzielne procesy ale mają dostęp do samego obszaru pamięci w pracy też mają dostęp do tego samego 
pamięci operacji i Rzecz polega na tym że w związku z tym że mają dostęp do tego samego obszaru pamięci operacyjnej to każdy z nich pasuje blok kontrolny 
to informacje które są w tym bloku kontrolnym które muszą tam być wpisane ich zestaw może być mniejszy niż w przypadku cały proces A co to znaczy że jest mniejszy zestaw informacji w bloku kontrolny przy przełączaniu kontekstu gdzie trzeba przepisywać te informacje z jednego bloku kontrolnego po to żeby proces mógł się wykonywać a potem wpisywać do bloku kontrolnego że 
go wyrzucić 
tak idź jest mniej to będzie to krócej trwało 
czy mniej obciążają system Dlatego używam tego pojęcia często ciężki albo lekki natomiast one są wykonywane oddzielne procesy Czyli też może być w stanie nowym gotowym wykonywanym może czekać Może być zakończony Tak jest tylko jeden podczas utonal momencie tylko jeden wątek może być wykonywane Każdy ma swój to ma swój licznik rozkazów oczywiście novatec oddzielna sekwencja rozkazów może tworzyć 
ja podam ale to już w przyszłym roku się spotkamy w przypadku systemów rozproszonych przykład takiego oprogramowania porównanie oprogramowania dla serwera plików w przypadku gdy to będzie wykonywany jako oddzielny proces 
i wypadku gdy to jest wykonywany jako zestaw mąki pokazy jeszcze inne zalety związane z tworzeniem oprogramowania wielowątkowe ale jak mówię 
przyjdziemy do tego w przyszłym gdyby zajmiemy się systemami rozproszonymi za rok 
teraz przechodzimy do jednego najważniejszych części 
zagadnienia zarządzania procesami to jest planowanie lub też szeregowanie proces 
pamiętają państwo z tego pierwszego wykładu że no właśnie mamy procesów wiele mogłabym przypadku one Chcę uzyskać dostęp do tego typu zasobów systemu komputerowego i że same nie mają prawa dostępu ale proszą używając funkcji systemowych system operacyjny taki deszcz no i może oczywiście być sytuacja pierwsza No gdy mamy wiele 
które chcą uzyskać dostęp do procesowana to system operacyjny decyduje w jakiej kolejności czyli proces planowania albo szeregowania procesów to zagadnienie polega na tym że system operacyjny musi określić kolejkę w jakiej te procesy uzyskają dostęp w szczególności dotyczących 
ale także to innych zasobów poznamy to do pamięci operacyjnej do operacji zapisu i odczytu i tak dalej 
czyli planowanie jeszcze raz tak napisane polega na określeniu w jakiej kolejności po rzeczy uzyskują dostęp do zasobów Open Oczywiście to jest dotyczy sytuacji gdy ich jest kilka tle Każdy chce być pierwszy aż przyjdą w kolejce trzeba ich uszeregować oczywiście chcielibyśmy żeby system operacyjny w ogóle cały system komputerowy pracował jak najlepiej są pewne kryte 
tego planowania Plusa piwka to przykłady kolejek w jakich procesy czekają to może być kolejka w ogóle cały Zadaj mi chromatycznych to mówił po tym mniejszym przypadku obejmującym także te zadania wielowątkowe kolejka procesów gotowych do procesora kolejka do urządzeń wejścia-wyjścia także proces może zażądać operacji wejścia-wyjścia no to wtedy też będzie 
ustawione w kolejce do tego urządzenia może utworzyć nowy proces i czekać na jego Zakończenie może Wykorzystaj cały kwant czasu i zostanie przeniesiony do kolejki procesów No i teraz tutaj właśnie też mam taki schemat ilustruje 
Czyli mamy kolejkę procent w gotowym do której trafiają nowe proces 
gra Problem szeregowania polega na tym że system operacyjny decyduje który z nich dostanie czas procesor się skończy No to będzie zakończony to już się nim nie będzie natomiast 
może zażądać operacji wejścia-wyjścia No to będziesz ustawiony wyrzucony z procesora ustawiony w kolejce do urządzenia jak to opera prawidłowo wykonana wróci do kolejki procesu to proces możesz skończyć Misiek pan czas wyrzucany z procesora trasa do kolegi foto 
może oczekiwać na na przykład na zapis jakiś danych z terminala czyli czeka na tle przerwanie No to też wyrzucony z procesora nastąpi to tego wróci do kolejki procesów podobny proces może wywołać potomka No to wiemy że zostanie uśpiony czyli wyrzucany powołuje tylko potomka wykonuje potomek się wykonuje pokazuj skończy budzi 
przykładowo Shell wraca do kolegi procesów gotowy no mów mówimy tutaj o ogólnym przypadku systemu wielu dostępnych operacyjnych gdzie no użytkowników naraz pracuj wielu każdy ma swojego Shella prawda my wreszcie o tym też to już nie powiem później procesy też rywalizują o miejsce operacyjnych W pewnych sytuacjach wyrzucane tej pamięci operacyjnej 
No to jak skończy musieć mam czasu inny ma być uruchomiony i trzeba miejsce pamięci operacyjnej dlatego nowego utworzyć No to inny trzeba wyrzucić tej pamięci No i on będzie musiał czekać aż dostanie miejsce pamięci operacyjnych dopiero wróciła kolejki Czyli widzimy wiele sytuacji jest takie których procesy są profesora wyrzucane 
a Cały czas mamy problem ustawiania i w pewnej kolejce w szczególności w kolejce do dostępu czasu procesora ale także do innych 
działa 
Jak można teraz powiedzieć w jaki sposób określić kiedy nam system lepiej pracuje gorzej pracy trzeba powiedzieć że to ja pracuję system w ogóle istotny sposób zależy od poziomu masz czy przyjęcia tych 
tego rozwiązywania tego problemu szeregowania proces popatrzmy najpierw na właściciela tego o której kupił to komputerowy No to chciałby żeby jak już on działa mówimy o systempack komercyjnych żeby jak najlepiej ten procesor był wykorzystany skoro już jest procent wykorzystania procesora jak ten proces liczymy No można powiedzieć jest w pewien 
przedziały czasu w którym on wykonuje 
żadne procesy są pewne okresy czasu których nie wykonuje tych procesów No to z punktu widzenia No wykorzystania procesora tego czasu procesora No to będzie stosunek tego czasu gdy wykonuje prace użytkowe do czasu w ogóle przepustowość No Można popatrzeć Także mamy określony przedział czasu na przykład 
ile tych procesów zostało w kończone w ciągu w tym czasie oczywiście to wino bardzo Tak oczywiście zależą do tego jak jest obciążenie w ogóle no i użytkowników ten taty zwracam uwagę teraz to są takie które mogą być interesują właściciel ale teraz popatrz na troszkę inny czas cyklu przetwarzanie 
mamy 
użytkowników systemu którzy zgłaszają proces 
jeśli ten proces wykonywany jest w formie no właśnie 
użycia czasu taki że są przedziały czasu których jest wykonywany i nie jest wykonywany 
to czas cyklu przetwarzania powiedzmy czas cyklu przetwarzania jednego procesu to będzie czas od jego wywołania do zakończenia tego czyli ten czas cyklu przetwarzania obejmuje zarówno 
Ten czas który od czekał na dostęp do procesora w stanie gotowym czy innym czy uśpionym aż do momentu gdy całkiem się wykąpał 
ryż i teraz weźmiemy u średnim metoda wielu procesów zgłaszanych przez użytkowników No to będziemy mogli że powiedzieć pośrednim pracy przetwarzanie to jest widzimy Już Takie kryterium w użytkownik Ile średnio użytkownik musi czekać na wykonanie to coś da się zagadnienie złożone Dlatego że są procesy wzdłuż szybko tak ale będziemy na to patrzeć z punktu widzenia przykładowy 
mów szeregowanie 
No i następny czas oczekiwania średni czas oczekiwania w kolejkach 
czy tutaj patrzymy na średni czas ile w ogóle trzeba średnio czekać na wynik A to ile średnio w kolejkach dany proces stoi czyli ile czasu się nie wykonuje prawda to oczywiście chcemy żeby jabłko najmniej stał w tych kolejkach podobnie chcemy żeby jechać mnie i najkrócej czekać na wynik ale ty jeszcze inny przykład czas odpowiedzi 
to dotyczy to jest kryterium które dotyczy systemów i dlatego taki jak Edyta 
w przypadku edytora No to dyskutowanie ile czasu będzie od początku uruchomienia edytora do jego zakończenia No to zależy przede wszystkim co użytkownik w trakcie jak używa tego edytora przy sobie zrobił na przykład uruchomił edytor i zrobił pół godziny przerwy na kawę tutaj takim istotnym może być czas odpowiedzi to jest czas gdy zgłaszamy życzenie żeby ten edytor przykładowo czyim 
Singer interakcyjny coś zrobił jak szybko na to nam odpowiedź a nie w ogóle czas cyklu przetwarzania czy cały czas oczekiwania dobrze widzę że skończyłem ten swój czas pierwszych dwóch wykładów także zrobimy teraz 15 minut przerwy o 10:00 Zapraszam na drugi kolejny wykład na tym będzie 
6 zwykła będzie tak także robimy sobie przerwę teraz 15 minut 
