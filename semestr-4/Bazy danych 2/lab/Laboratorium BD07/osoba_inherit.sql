/*-------------------------------------------------
-- Materiał pomocniczy do Laboratorium BD7
-- obrazujący modelowanie dziedziczenia obiektów
--
-- opr. Józef Woźniak (2021)
--------------------------------------------------*/

--------------------------------------------------
-- Tworzenie tabeli zawierającej zebrane atrybuty 
--nauczyciela i studenta oraz tabeli kont 
--------------------------------------------------
-- Generated by Oracle SQL Developer Data Modeler 20.3.0.283.0710
--   at:        2021-02-25 21:22:51 CET
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2

CREATE OR REPLACE TYPE type_osoba_adres AS OBJECT (
    ulica   VARCHAR2(25),
    miasto  VARCHAR2(15),
    kod     VARCHAR2(10)
) NOT FINAL;
/

CREATE TABLE konto (
    id_pracownika  NUMBER(5) NOT NULL,
    typ_konta      VARCHAR2(10) NOT NULL,
    nazwa_konta    VARCHAR2(25)
);

ALTER TABLE konto
    ADD CONSTRAINT typ_konta_ch CHECK ( typ_konta IN ( 'extranet', 'mail', 'oracle', 'teams' ) );

ALTER TABLE konto ADD CONSTRAINT konto_pk PRIMARY KEY ( id_pracownika,
                                                        typ_konta );

CREATE TABLE osoba (
    id_pracownika       NUMBER(5) NOT NULL,
    pracownik_nazwisko  VARCHAR2(30) NOT NULL,
    pracownik_imie      VARCHAR2(30),
    pracownik_adres     type_osoba_adres,
    tytul_naukowy       VARCHAR2(10),
    nr_indeksu          NUMBER(5),
    CHECK ( pracownik_adres.miasto IS NOT NULL )
);

ALTER TABLE osoba ADD CONSTRAINT osoba_pk PRIMARY KEY ( id_pracownika );

ALTER TABLE konto
    ADD CONSTRAINT osoba_fk FOREIGN KEY ( id_pracownika )
        REFERENCES osoba ( id_pracownika );
		
---------------------------------------------------------
-- Budowa definicji zabezpieczającej przed nałożeniem się 
-- w każdym wierszu tabeli OSOBA atrybutów nauczyciela 
-- i studenta
---------------------------------------------------------
ALTER TABLE osoba
    ADD CONSTRAINT osoba_ch CHECK ( ( nr_indeksu IS NULL
                                      AND tytul_naukowy IS NOT NULL )
                                    OR ( nr_indeksu IS NOT NULL
                                         AND tytul_naukowy IS NULL ) );

--------------------------------------------------------
-- Wprowadzanie danych testowych spełniających założenia
--------------------------------------------------------
create sequence seq_osoba;   

insert into osoba (id_pracownika, pracownik_nazwisko, pracownik_imie, 
                    pracownik_adres, nr_indeksu)
values (seq_osoba.nextval,'Abacki', 'Adam', type_osoba_adres(null,'Kraków', null), 100);                 

insert into osoba (id_pracownika, pracownik_nazwisko, pracownik_imie, 
                    pracownik_adres,tytul_naukowy)
values (seq_osoba.nextval,'Babacki', 'Bogdan', type_osoba_adres(null,'Kraków', null), 'dr inż.');

select * from osoba;

insert into konto values (1, 'mail', 'abacki@uczelnia.edu.pl');
insert into konto values (2, 'mail', 'babacki@uczelnia.edu.pl');
insert into konto values (2, 'teams', 'babacki@uczelnia.edu.pl');

select * from konto;

--------------------------------------------------------------
-- Wprowadzanie danych testowych nie spełniających 
-- założeń - wspólne wystąpienie nr_indeksu i tytułu naukowego
--------------------------------------------------------------
insert into osoba (id_pracownika, pracownik_nazwisko, pracownik_imie, 
                    pracownik_adres, nr_indeksu, tytul_naukowy)
values (seq_osoba.nextval,'Cabacki', 'Czesław', type_osoba_adres(null,'Katowice', null), 100, 'prof');

-----------------------------------------------------
-- Odnajdywanie tylko nauczycieli
-----------------------------------------------------

select pracownik_nazwisko||' '||pracownik_imie Nauczyciel, typ_konta Typ, nazwa_konta Nazwa
from osoba o join konto k on o.id_pracownika = k.id_pracownika
where nr_indeksu is null;

--------------------------------------------------------
-- Kasowanie utworzonych obiektów
--------------------------------------------------------

drop sequence seq_osoba;
drop table konto cascade constraints;
drop table osoba cascade constraints;
drop type type_osoba_adres;

-----------------------------------------------------