                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.3 Wed May 18 15:32:00 2011
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module z2
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _U12
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; special function bits 
                             18 ;--------------------------------------------------------
                    00B4     19 _T1	=	0x00b4
                             20 ;--------------------------------------------------------
                             21 ; overlayable register banks 
                             22 ;--------------------------------------------------------
                             23 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      24 	.ds 8
                             25 ;--------------------------------------------------------
                             26 ; internal ram data
                             27 ;--------------------------------------------------------
                             28 	.area DSEG    (DATA)
                             29 ;--------------------------------------------------------
                             30 ; overlayable items in internal ram 
                             31 ;--------------------------------------------------------
                             32 	.area	OSEG    (OVR,DATA)
                             33 ;--------------------------------------------------------
                             34 ; Stack segment in internal ram 
                             35 ;--------------------------------------------------------
                             36 	.area	SSEG	(DATA)
   0008                      37 __start__stack:
   0008                      38 	.ds	1
                             39 
                             40 ;--------------------------------------------------------
                             41 ; indirectly addressable internal ram data
                             42 ;--------------------------------------------------------
                             43 	.area ISEG    (DATA)
                             44 ;--------------------------------------------------------
                             45 ; bit data
                             46 ;--------------------------------------------------------
                             47 	.area BSEG    (BIT)
                             48 ;--------------------------------------------------------
                             49 ; external ram data
                             50 ;--------------------------------------------------------
                             51 	.area XSEG    (XDATA)
                    8000     52 _U12	=	0x8000
                             53 ;--------------------------------------------------------
                             54 ; external initialized ram data
                             55 ;--------------------------------------------------------
                             56 	.area XISEG   (XDATA)
                             57 ;--------------------------------------------------------
                             58 ; interrupt vector 
                             59 ;--------------------------------------------------------
                             60 	.area CSEG    (CODE)
   4000                      61 __interrupt_vect:
   4000 02 40 97             62 	ljmp	__sdcc_gsinit_startup
   4003 32                   63 	reti
   4004                      64 	.ds	7
   400B 32                   65 	reti
   400C                      66 	.ds	7
   4013 32                   67 	reti
   4014                      68 	.ds	7
   401B 32                   69 	reti
   401C                      70 	.ds	7
   4023 32                   71 	reti
   4024                      72 	.ds	7
   402B 32                   73 	reti
   402C                      74 	.ds	7
                             75 ;--------------------------------------------------------
                             76 ; global & static initialisations
                             77 ;--------------------------------------------------------
                             78 	.area GSINIT  (CODE)
                             79 	.area GSFINAL (CODE)
                             80 	.area GSINIT  (CODE)
   4097                      81 __sdcc_gsinit_startup:
   4097 75 81 07             82 	mov	sp,#__start__stack - 1
   409A 12 40 93             83 	lcall	__sdcc_external_startup
   409D E5 82                84 	mov	a,dpl
   409F 60 03                85 	jz	__sdcc_init_data
   40A1 02 40 33             86 	ljmp	__sdcc_program_startup
   40A4                      87 __sdcc_init_data:
                             88 ;	_mcs51_genXINIT() start
   40A4 74 00                89 	mov	a,#l_XINIT
   40A6 44 00                90 	orl	a,#l_XINIT>>8
   40A8 60 29                91 	jz	00003$
   40AA 74 D6                92 	mov	a,#s_XINIT
   40AC 24 00                93 	add	a,#l_XINIT
   40AE F9                   94 	mov	r1,a
   40AF 74 40                95 	mov	a,#s_XINIT>>8
   40B1 34 00                96 	addc	a,#l_XINIT>>8
   40B3 FA                   97 	mov	r2,a
   40B4 90 40 D6             98 	mov	dptr,#s_XINIT
   40B7 78 00                99 	mov	r0,#s_XISEG
   40B9 75 A0 00            100 	mov	p2,#(s_XISEG >> 8)
   40BC E4                  101 00001$:	clr	a
   40BD 93                  102 	movc	a,@a+dptr
   40BE F2                  103 	movx	@r0,a
   40BF A3                  104 	inc	dptr
   40C0 08                  105 	inc	r0
   40C1 B8 00 02            106 	cjne	r0,#0,00002$
   40C4 05 A0               107 	inc	p2
   40C6 E5 82               108 00002$:	mov	a,dpl
   40C8 B5 01 F1            109 	cjne	a,ar1,00001$
   40CB E5 83               110 	mov	a,dph
   40CD B5 02 EC            111 	cjne	a,ar2,00001$
   40D0 75 A0 FF            112 	mov	p2,#0xFF
   40D3                     113 00003$:
                            114 ;	_mcs51_genXINIT() end
                            115 	.area GSFINAL (CODE)
   40D3 02 40 33            116 	ljmp	__sdcc_program_startup
                            117 ;--------------------------------------------------------
                            118 ; Home
                            119 ;--------------------------------------------------------
                            120 	.area HOME    (CODE)
                            121 	.area CSEG    (CODE)
                            122 ;--------------------------------------------------------
                            123 ; code
                            124 ;--------------------------------------------------------
                            125 	.area CSEG    (CODE)
   4033                     126 __sdcc_program_startup:
   4033 12 40 38            127 	lcall	_main
                            128 ;	return from main will lock up
   4036 80 FE               129 	sjmp .
                            130 ;------------------------------------------------------------
                            131 ;Allocation info for local variables in function 'main'
                            132 ;------------------------------------------------------------
                            133 ;------------------------------------------------------------
                            134 ;Z:\pn\z1\z2.c:8: void main (void) {
                            135 ;	-----------------------------------------
                            136 ;	 function main
                            137 ;	-----------------------------------------
   4038                     138 _main:
                    0002    139 	ar2 = 0x02
                    0003    140 	ar3 = 0x03
                    0004    141 	ar4 = 0x04
                    0005    142 	ar5 = 0x05
                    0006    143 	ar6 = 0x06
                    0007    144 	ar7 = 0x07
                    0000    145 	ar0 = 0x00
                    0001    146 	ar1 = 0x01
                            147 ;Z:\pn\z1\z2.c:9: unsigned char r=0;
                            148 ;     genAssign
   4038 7A 00               149 	mov	r2,#0x00
                            150 ;Z:\pn\z1\z2.c:11: unsigned char on=0;
                            151 ;     genAssign
   403A 7B 00               152 	mov	r3,#0x00
                            153 ;Z:\pn\z1\z2.c:12: unsigned char hz=50;
                            154 ;     genAssign
   403C 7C 32               155 	mov	r4,#0x32
   403E                     156 00120$:
                            157 ;Z:\pn\z1\z2.c:16: if (( U12 & 0x01 )== 0 )
                            158 ;     genAssign
   403E 90 80 00            159 	mov	dptr,#_U12
   4041 E0                  160 	movx	a,@dptr
   4042 FD                  161 	mov	r5,a
                            162 ;     genAnd
   4043 53 05 01            163 	anl	ar5,#0x01
                            164 ;     genCmpEq
                            165 ;       Peephole 132   changed ljmp to sjmp
                            166 ;       Peephole 199   optimized misc jump sequence
   4046 BD 00 02            167 	cjne r5,#0x00,00132$
                            168 ;00134$:
                            169 ;       Peephole 200   removed redundant sjmp
   4049                     170 00135$:
                            171 ;Z:\pn\z1\z2.c:18: on =1;
                            172 ;     genAssign
   4049 7B 01               173 	mov	r3,#0x01
                            174 ;Z:\pn\z1\z2.c:21: while(on)
   404B                     175 00132$:
                            176 ;     genAssign
   404B 8A 05               177 	mov	ar5,r2
   404D                     178 00112$:
                            179 ;     genAssign
   404D 8D 02               180 	mov	ar2,r5
                            181 ;     genIfx
   404F EB                  182 	mov	a,r3
                            183 ;     genIfxJump
                            184 ;       Peephole 110   removed ljmp by inverse jump logic
   4050 60 EC               185 	jz  00120$
   4052                     186 00136$:
                            187 ;Z:\pn\z1\z2.c:24: if (( r & 0x01) == 0) // maskowanie
                            188 ;     genAnd
   4052 74 01               189 	mov	a,#0x01
   4054 5D                  190 	anl	a,r5
   4055 FE                  191 	mov	r6,a
                            192 ;     genCmpEq
                            193 ;       Peephole 132   changed ljmp to sjmp
                            194 ;       Peephole 199   optimized misc jump sequence
   4056 BE 00 04            195 	cjne r6,#0x00,00104$
                            196 ;00137$:
                            197 ;       Peephole 200   removed redundant sjmp
   4059                     198 00138$:
                            199 ;Z:\pn\z1\z2.c:25: T1 = 1;
                            200 ;     genAssign
   4059 D2 B4               201 	setb	_T1
                            202 ;       Peephole 132   changed ljmp to sjmp
   405B 80 02               203 	sjmp 00105$
   405D                     204 00104$:
                            205 ;Z:\pn\z1\z2.c:27: T1 = 0;
                            206 ;     genAssign
   405D C2 B4               207 	clr	_T1
   405F                     208 00105$:
                            209 ;Z:\pn\z1\z2.c:28: r++;
                            210 ;     genPlus
                            211 ;     genPlusIncr
   405F 0D                  212 	inc	r5
                            213 ;Z:\pn\z1\z2.c:29: for(i=0;i<hz;i++);
                            214 ;     genAssign
   4060 7E 00               215 	mov	r6,#0x00
   4062                     216 00115$:
                            217 ;     genCmpLt
                            218 ;     genCmp
   4062 C3                  219 	clr	c
   4063 EE                  220 	mov	a,r6
   4064 9C                  221 	subb	a,r4
                            222 ;     genIfxJump
                            223 ;       Peephole 108   removed ljmp by inverse jump logic
   4065 50 03               224 	jnc  00118$
   4067                     225 00139$:
                            226 ;     genPlus
                            227 ;     genPlusIncr
   4067 0E                  228 	inc	r6
                            229 ;       Peephole 132   changed ljmp to sjmp
   4068 80 F8               230 	sjmp 00115$
   406A                     231 00118$:
                            232 ;Z:\pn\z1\z2.c:31: if (( U12 & 0x02 )== 0 )
                            233 ;     genAssign
   406A 90 80 00            234 	mov	dptr,#_U12
   406D E0                  235 	movx	a,@dptr
   406E FE                  236 	mov	r6,a
                            237 ;     genAnd
   406F 53 06 02            238 	anl	ar6,#0x02
                            239 ;     genCmpEq
                            240 ;       Peephole 132   changed ljmp to sjmp
                            241 ;       Peephole 199   optimized misc jump sequence
   4072 BE 00 02            242 	cjne r6,#0x00,00107$
                            243 ;00140$:
                            244 ;       Peephole 200   removed redundant sjmp
   4075                     245 00141$:
                            246 ;Z:\pn\z1\z2.c:33: on =0;
                            247 ;     genAssign
   4075 7B 00               248 	mov	r3,#0x00
   4077                     249 00107$:
                            250 ;Z:\pn\z1\z2.c:36: if (( U12 & 0x04 )== 0 )
                            251 ;     genAssign
   4077 90 80 00            252 	mov	dptr,#_U12
   407A E0                  253 	movx	a,@dptr
   407B FE                  254 	mov	r6,a
                            255 ;     genAnd
   407C 53 06 04            256 	anl	ar6,#0x04
                            257 ;     genCmpEq
                            258 ;       Peephole 132   changed ljmp to sjmp
                            259 ;       Peephole 199   optimized misc jump sequence
   407F BE 00 01            260 	cjne r6,#0x00,00109$
                            261 ;00142$:
                            262 ;       Peephole 200   removed redundant sjmp
   4082                     263 00143$:
                            264 ;Z:\pn\z1\z2.c:39: hz++;
                            265 ;     genPlus
                            266 ;     genPlusIncr
   4082 0C                  267 	inc	r4
   4083                     268 00109$:
                            269 ;Z:\pn\z1\z2.c:42: if (( U12 & 0x08 )== 0 )
                            270 ;     genAssign
   4083 90 80 00            271 	mov	dptr,#_U12
   4086 E0                  272 	movx	a,@dptr
   4087 FE                  273 	mov	r6,a
                            274 ;     genAnd
   4088 53 06 08            275 	anl	ar6,#0x08
                            276 ;     genCmpEq
                            277 ;       Peephole 132   changed ljmp to sjmp
                            278 ;       Peephole 199   optimized misc jump sequence
   408B BE 00 BF            279 	cjne r6,#0x00,00112$
                            280 ;00144$:
                            281 ;       Peephole 200   removed redundant sjmp
   408E                     282 00145$:
                            283 ;Z:\pn\z1\z2.c:44: hz--;
                            284 ;     genMinus
                            285 ;     genMinusDec
   408E 1C                  286 	dec	r4
   408F 02 40 4D            287 	ljmp	00112$
   4092                     288 00122$:
   4092 22                  289 	ret
                            290 	.area CSEG    (CODE)
                            291 	.area XINIT   (CODE)
