                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.3 Tue Mar 29 12:06:18 2011
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module z1
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _wybor_wysw
                             12 	.globl _main
                             13 	.globl _init
                             14 	.globl _func_isr
                             15 	.globl _U10
                             16 	.globl _U15
                             17 	.globl _t
                             18 	.globl _zawart_wysw
                             19 ;--------------------------------------------------------
                             20 ; special function registers
                             21 ;--------------------------------------------------------
                    00A8     22 _IE	=	0x00a8
                    0089     23 _TMOD	=	0x0089
                    008D     24 _TH1	=	0x008d
                    008B     25 _TL1	=	0x008b
                    0088     26 _TCON	=	0x0088
                             27 ;--------------------------------------------------------
                             28 ; special function bits 
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; overlayable register banks 
                             32 ;--------------------------------------------------------
                             33 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      34 	.ds 8
                             35 ;--------------------------------------------------------
                             36 ; internal ram data
                             37 ;--------------------------------------------------------
                             38 	.area DSEG    (DATA)
   0008                      39 _zawart_wysw::
   0008                      40 	.ds 4
   000C                      41 _t::
   000C                      42 	.ds 2
                             43 ;--------------------------------------------------------
                             44 ; overlayable items in internal ram 
                             45 ;--------------------------------------------------------
                             46 	.area OSEG    (OVR,DATA)
                             47 ;--------------------------------------------------------
                             48 ; Stack segment in internal ram 
                             49 ;--------------------------------------------------------
                             50 	.area	SSEG	(DATA)
   000E                      51 __start__stack:
   000E                      52 	.ds	1
                             53 
                             54 ;--------------------------------------------------------
                             55 ; indirectly addressable internal ram data
                             56 ;--------------------------------------------------------
                             57 	.area ISEG    (DATA)
                             58 ;--------------------------------------------------------
                             59 ; bit data
                             60 ;--------------------------------------------------------
                             61 	.area BSEG    (BIT)
                             62 ;--------------------------------------------------------
                             63 ; external ram data
                             64 ;--------------------------------------------------------
                             65 	.area XSEG    (XDATA)
                    8000     66 _U15	=	0x8000
                    FFFF     67 _U10	=	0xffff
                             68 ;--------------------------------------------------------
                             69 ; external initialized ram data
                             70 ;--------------------------------------------------------
                             71 	.area XISEG   (XDATA)
                             72 ;--------------------------------------------------------
                             73 ; interrupt vector 
                             74 ;--------------------------------------------------------
                             75 	.area CSEG    (CODE)
   4000                      76 __interrupt_vect:
   4000 02 40 C5             77 	ljmp	__sdcc_gsinit_startup
   4003 32                   78 	reti
   4004                      79 	.ds	7
   400B 32                   80 	reti
   400C                      81 	.ds	7
   4013 32                   82 	reti
   4014                      83 	.ds	7
   401B 02 40 38             84 	ljmp	_func_isr
   401E                      85 	.ds	5
   4023 32                   86 	reti
   4024                      87 	.ds	7
   402B 32                   88 	reti
   402C                      89 	.ds	7
                             90 ;--------------------------------------------------------
                             91 ; global & static initialisations
                             92 ;--------------------------------------------------------
                             93 	.area GSINIT  (CODE)
                             94 	.area GSFINAL (CODE)
                             95 	.area GSINIT  (CODE)
   40C5                      96 __sdcc_gsinit_startup:
   40C5 75 81 0D             97 	mov	sp,#__start__stack - 1
   40C8 12 40 C1             98 	lcall	__sdcc_external_startup
   40CB E5 82                99 	mov	a,dpl
   40CD 60 03               100 	jz	__sdcc_init_data
   40CF 02 40 33            101 	ljmp	__sdcc_program_startup
   40D2                     102 __sdcc_init_data:
                            103 ;	_mcs51_genXINIT() start
   40D2 74 00               104 	mov	a,#l_XINIT
   40D4 44 00               105 	orl	a,#l_XINIT>>8
   40D6 60 29               106 	jz	00003$
   40D8 74 09               107 	mov	a,#s_XINIT
   40DA 24 00               108 	add	a,#l_XINIT
   40DC F9                  109 	mov	r1,a
   40DD 74 41               110 	mov	a,#s_XINIT>>8
   40DF 34 00               111 	addc	a,#l_XINIT>>8
   40E1 FA                  112 	mov	r2,a
   40E2 90 41 09            113 	mov	dptr,#s_XINIT
   40E5 78 00               114 	mov	r0,#s_XISEG
   40E7 75 A0 00            115 	mov	p2,#(s_XISEG >> 8)
   40EA E4                  116 00001$:	clr	a
   40EB 93                  117 	movc	a,@a+dptr
   40EC F2                  118 	movx	@r0,a
   40ED A3                  119 	inc	dptr
   40EE 08                  120 	inc	r0
   40EF B8 00 02            121 	cjne	r0,#0,00002$
   40F2 05 A0               122 	inc	p2
   40F4 E5 82               123 00002$:	mov	a,dpl
   40F6 B5 01 F1            124 	cjne	a,ar1,00001$
   40F9 E5 83               125 	mov	a,dph
   40FB B5 02 EC            126 	cjne	a,ar2,00001$
   40FE 75 A0 FF            127 	mov	p2,#0xFF
   4101                     128 00003$:
                            129 ;	_mcs51_genXINIT() end
                            130 ;N:\pn\z3\z1.c:44: int t= 0;
                            131 ;     genAssign
   4101 E4                  132 	clr	a
   4102 F5 0D               133 	mov	(_t + 1),a
   4104 F5 0C               134 	mov	_t,a
                            135 	.area GSFINAL (CODE)
   4106 02 40 33            136 	ljmp	__sdcc_program_startup
                            137 ;--------------------------------------------------------
                            138 ; Home
                            139 ;--------------------------------------------------------
                            140 	.area HOME    (CODE)
                            141 	.area CSEG    (CODE)
                            142 ;--------------------------------------------------------
                            143 ; code
                            144 ;--------------------------------------------------------
                            145 	.area CSEG    (CODE)
   4033                     146 __sdcc_program_startup:
   4033 12 40 AB            147 	lcall	_main
                            148 ;	return from main will lock up
   4036 80 FE               149 	sjmp .
                            150 ;------------------------------------------------------------
                            151 ;Allocation info for local variables in function 'func_isr'
                            152 ;------------------------------------------------------------
                            153 ;------------------------------------------------------------
                            154 ;N:\pn\z3\z1.c:47: void func_isr (void) interrupt 3
                            155 ;	-----------------------------------------
                            156 ;	 function func_isr
                            157 ;	-----------------------------------------
   4038                     158 _func_isr:
                    0002    159 	ar2 = 0x02
                    0003    160 	ar3 = 0x03
                    0004    161 	ar4 = 0x04
                    0005    162 	ar5 = 0x05
                    0006    163 	ar6 = 0x06
                    0007    164 	ar7 = 0x07
                    0000    165 	ar0 = 0x00
                    0001    166 	ar1 = 0x01
   4038 C0 E0               167 	push	acc
   403A C0 F0               168 	push	b
   403C C0 82               169 	push	dpl
   403E C0 83               170 	push	dph
   4040 C0 02               171 	push	ar2
   4042 C0 00               172 	push	ar0
   4044 C0 D0               173 	push	psw
   4046 75 D0 00            174 	mov	psw,#0x00
                            175 ;N:\pn\z3\z1.c:49: if (t > 3) t = 0;
                            176 ;     genCmpGt
                            177 ;     genCmp
   4049 C3                  178 	clr	c
   404A 74 03               179 	mov	a,#0x03
   404C 95 0C               180 	subb	a,_t
                            181 ;       Peephole 159   avoided xrl during execution
   404E 74 80               182 	mov  a,#(0x00 ^ 0x80)
   4050 85 0D F0            183 	mov	b,(_t + 1)
   4053 63 F0 80            184 	xrl	b,#0x80
   4056 95 F0               185 	subb	a,b
                            186 ;     genIfxJump
                            187 ;       Peephole 108   removed ljmp by inverse jump logic
   4058 50 05               188 	jnc  00102$
   405A                     189 00106$:
                            190 ;     genAssign
   405A E4                  191 	clr	a
   405B F5 0D               192 	mov	(_t + 1),a
   405D F5 0C               193 	mov	_t,a
   405F                     194 00102$:
                            195 ;N:\pn\z3\z1.c:52: U15 = wybor_wysw[t];
                            196 ;     genPlus
   405F E5 0C               197 	mov	a,_t
   4061 24 BD               198 	add	a,#_wybor_wysw
   4063 F5 82               199 	mov	dpl,a
   4065 E5 0D               200 	mov	a,(_t + 1)
   4067 34 40               201 	addc	a,#(_wybor_wysw >> 8)
   4069 F5 83               202 	mov	dph,a
                            203 ;     genPointerGet
                            204 ;     genCodePointerGet
   406B E4                  205 	clr	a
   406C 93                  206 	movc	a,@a+dptr
                            207 ;     genAssign
                            208 ;       Peephole 100   removed redundant mov
   406D FA                  209 	mov  r2,a
   406E 90 80 00            210 	mov  dptr,#_U15
   4071 F0                  211 	movx @dptr,a
                            212 ;N:\pn\z3\z1.c:53: U10 = cyfra_n;
                            213 ;     genAssign
   4072 90 FF FF            214 	mov	dptr,#_U10
                            215 ;       Peephole 180   changed mov to clr
   4075 E4                  216 	clr  a
   4076 F0                  217 	movx	@dptr,a
                            218 ;N:\pn\z3\z1.c:54: U10 = zawart_wysw[t];
                            219 ;     genPlus
   4077 E5 0C               220 	mov	a,_t
   4079 24 08               221 	add	a,#_zawart_wysw
   407B F8                  222 	mov	r0,a
                            223 ;     genPointerGet
                            224 ;     genNearPointerGet
   407C 90 FF FF            225 	mov	dptr,#_U10
   407F E6                  226 	mov	a,@r0
   4080 F0                  227 	movx	@dptr,a
                            228 ;N:\pn\z3\z1.c:56: t++;
                            229 ;     genPlus
                            230 ;     genPlusIncr
   4081 74 01               231 	mov	a,#0x01
   4083 25 0C               232 	add	a,_t
   4085 F5 0C               233 	mov	_t,a
                            234 ;       Peephole 180   changed mov to clr
   4087 E4                  235 	clr  a
   4088 35 0D               236 	addc	a,(_t + 1)
   408A F5 0D               237 	mov	(_t + 1),a
   408C                     238 00103$:
   408C D0 D0               239 	pop	psw
   408E D0 00               240 	pop	ar0
   4090 D0 02               241 	pop	ar2
   4092 D0 83               242 	pop	dph
   4094 D0 82               243 	pop	dpl
   4096 D0 F0               244 	pop	b
   4098 D0 E0               245 	pop	acc
   409A 32                  246 	reti
                            247 ;------------------------------------------------------------
                            248 ;Allocation info for local variables in function 'init'
                            249 ;------------------------------------------------------------
                            250 ;------------------------------------------------------------
                            251 ;N:\pn\z3\z1.c:60: void init(void)
                            252 ;	-----------------------------------------
                            253 ;	 function init
                            254 ;	-----------------------------------------
   409B                     255 _init:
                            256 ;N:\pn\z3\z1.c:62: IE =	0x88;
                            257 ;     genAssign
   409B 75 A8 88            258 	mov	_IE,#0x88
                            259 ;N:\pn\z3\z1.c:63: TMOD =	0x20;  	    //tryb, nr licznika, czy z samoprzeladowaniem
                            260 ;     genAssign
   409E 75 89 20            261 	mov	_TMOD,#0x20
                            262 ;N:\pn\z3\z1.c:65: TH1 = TL1 = 0;     //Wartosc startowa
                            263 ;     genAssign
   40A1 75 8B 00            264 	mov	_TL1,#0x00
                            265 ;     genAssign
   40A4 75 8D 00            266 	mov	_TH1,#0x00
                            267 ;N:\pn\z3\z1.c:67: TCON = 0x40;
                            268 ;     genAssign
   40A7 75 88 40            269 	mov	_TCON,#0x40
   40AA                     270 00101$:
   40AA 22                  271 	ret
                            272 ;------------------------------------------------------------
                            273 ;Allocation info for local variables in function 'main'
                            274 ;------------------------------------------------------------
                            275 ;------------------------------------------------------------
                            276 ;N:\pn\z3\z1.c:72: main (void){
                            277 ;	-----------------------------------------
                            278 ;	 function main
                            279 ;	-----------------------------------------
   40AB                     280 _main:
                            281 ;N:\pn\z3\z1.c:73: init();
                            282 ;     genCall
   40AB 12 40 9B            283 	lcall	_init
                            284 ;N:\pn\z3\z1.c:75: zawart_wysw[3] = cyfra_5;
                            285 ;     genPointerSet
                            286 ;     genNearPointerSet
                            287 ;     genDataPointerSet
   40AE 75 0B 73            288 	mov	(_zawart_wysw + 0x0003),#0x73
                            289 ;N:\pn\z3\z1.c:76: zawart_wysw[2] = cyfra_6;
                            290 ;     genPointerSet
                            291 ;     genNearPointerSet
                            292 ;     genDataPointerSet
   40B1 75 0A 7B            293 	mov	(_zawart_wysw + 0x0002),#0x7B
                            294 ;N:\pn\z3\z1.c:77: zawart_wysw[1] = cyfra_4;
                            295 ;     genPointerSet
                            296 ;     genNearPointerSet
                            297 ;     genDataPointerSet
   40B4 75 09 65            298 	mov	(_zawart_wysw + 0x0001),#0x65
                            299 ;N:\pn\z3\z1.c:78: zawart_wysw[0] = cyfra_9;
                            300 ;     genPointerSet
                            301 ;     genNearPointerSet
                            302 ;     genDataPointerSet
   40B7 75 08 77            303 	mov	_zawart_wysw,#0x77
   40BA                     304 00102$:
                            305 ;       Peephole 132   changed ljmp to sjmp
   40BA 80 FE               306 	sjmp 00102$
   40BC                     307 00104$:
   40BC 22                  308 	ret
                            309 	.area CSEG    (CODE)
   40BD                     310 _wybor_wysw:
   40BD DF                  311 	.db #0xDF
   40BE EF                  312 	.db #0xEF
   40BF 7F                  313 	.db #0x7F
   40C0 BF                  314 	.db #0xBF
                            315 	.area XINIT   (CODE)
