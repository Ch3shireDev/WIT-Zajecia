
import java.util.HashMap;
import javax.swing.ComboBoxModel;
import javax.swing.JTextArea;
import javax.swing.event.ListDataListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alex
 */
public class Semigraphic extends javax.swing.JFrame {

   /**
    * Creates new form Semigraphic
    */
   public Semigraphic() {
      initComponents();
      for(String item : map.keySet()) Kind.addItem(item);
      getRootPane().setDefaultButton(BtnExecute);
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      HeightLabel = new javax.swing.JLabel();
      HeightValue = new javax.swing.JTextField();
      BtnExecute = new javax.swing.JButton();
      ResultScroll = new javax.swing.JScrollPane();
      ResultText = new javax.swing.JTextArea();
      Kind = new javax.swing.JComboBox<>();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      HeightLabel.setText("Wysokość");

      HeightValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
      HeightValue.setText("5");
      HeightValue.setMinimumSize(new java.awt.Dimension(60, 20));
      HeightValue.setPreferredSize(new java.awt.Dimension(60, 22));

      BtnExecute.setText("Execute");
      BtnExecute.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            BtnExecuteActionPerformed(evt);
         }
      });

      ResultText.setEditable(false);
      ResultText.setColumns(20);
      ResultText.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
      ResultText.setRows(5);
      ResultScroll.setViewportView(ResultText);

      Kind.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            KindActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(ResultScroll)
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(HeightLabel)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(HeightValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Kind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnExecute)))
                  .addGap(0, 184, Short.MAX_VALUE)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(HeightLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(HeightValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(BtnExecute)
               .addComponent(Kind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ResultScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents
   
   private static HashMap<String,Executor> map=makeMap();
   
   private static HashMap<String,Executor> makeMap()
   {
      HashMap<String,Executor> map=new HashMap<String,Executor>();
      map.put
      (
         "Left Down",
         new Executor()
         {
            @Override public void execute(JTextArea ResultText,int size)
            {
               for(int y=0;y<size;++y)
               {
                  for(int x=0;x<size;++x)
                  {
                     ResultText.append(x<=y?"*":" ");
                  }         
                  ResultText.append("\n");
               }
            }
         }
      );
      
      Executor lu=new Executor()
      {
         @Override public void execute(JTextArea ResultText,int size)
         {
            for(int y=0;y<size;++y)
            {
               for(int x=0;x<size;++x)
               {
                  ResultText.append(x<=size-y-1?"*":" ");
               }         
               ResultText.append("\n");
            }
         }
      };
      map.put("Left Up",lu);
      Executor rd=new Executor()
      {
         @Override public void execute(JTextArea ResultText,int size)
         {
            for(int y=0;y<size;++y)
            {
               for(int x=0;x<size;++x)
               {
                  ResultText.append(size-x-1<=y?"*":" ");
               }         
               ResultText.append("\n");
            }
         }
      };
      map.put("Right Down",rd);
      Executor ru=new Executor()
      {
         @Override public void execute(JTextArea ResultText,int size)
         {
            for(int y=0;y<size;++y)
            {
               for(int x=0;x<size;++x)
               {
                  ResultText.append(size-x-1<=size-y-1?"*":" ");
               }         
               ResultText.append("\n");
            }
         }
      };
      map.put("Right Up",ru);
      return map;
   };
   
   private void BtnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExecuteActionPerformed
      int hieght=Integer.parseInt(HeightValue.getText());
      ResultText.setText("");
      String kind=Kind.getSelectedItem().toString();
      map.get(kind).execute(ResultText,hieght);
      
      /*
      switch(Kind.getSelectedIndex())
      {
         case 0: LD(ResultText,hieght); break;
         case 1: LU(ResultText,hieght); break;
         case 2: RD(ResultText,hieght); break;
         case 3: RU(ResultText,hieght); break;
      }
      */
      HeightValue.selectAll();
      HeightValue.requestFocus();
   }//GEN-LAST:event_BtnExecuteActionPerformed

   private void KindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KindActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_KindActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(Semigraphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(Semigraphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(Semigraphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(Semigraphic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new Semigraphic().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton BtnExecute;
   private javax.swing.JLabel HeightLabel;
   private javax.swing.JTextField HeightValue;
   private javax.swing.JComboBox<String> Kind;
   private javax.swing.JScrollPane ResultScroll;
   private javax.swing.JTextArea ResultText;
   // End of variables declaration//GEN-END:variables
}
