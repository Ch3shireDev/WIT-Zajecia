
import java.awt.List;
import java.util.ArrayList;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.text.DefaultCaret;

public class HarmonicMainForm extends javax.swing.JFrame {

   public static final int ThreadCount=3;
   private final PriorityBlockingQueue<Task> tasks=new PriorityBlockingQueue<>();
   private final LinkedBlockingQueue<Result> results=new LinkedBlockingQueue<>();
   private final ArrayList<Thread> threads=new ArrayList<>();
   private final DefaultListModel<Result> model=new DefaultListModel<>();
   private boolean Stoped=false;
   public HarmonicMainForm() {
      initComponents();
      Results.setModel(model);
      for(int i=0;i<ThreadCount;++i)
      {
         Runnable pickTask=new Runnable()
         {
            @Override public void run() 
            {
               while(!Stoped)
               {
                  try 
                  {
                     Task task=tasks.poll(100, TimeUnit.MILLISECONDS);
                     if(task!=null)
                     {
                        task.run();
                        results.add(task.getResult());
                     }
                  }
                  catch (InterruptedException ex) 
                  {
                  }
               }
            }            
         };
         Thread thread=new Thread(pickTask);
         threads.add(thread);
         thread.start();
      }
      Runnable moveResult=new Runnable()
      {
         @Override public void run() 
         {
            while(!Stoped)
            {
               if(results.isEmpty()) 
               {
                  try { Thread.sleep(100); } 
                  catch (InterruptedException ex) {}
               }
               else
               {   
                  Result result=results.poll();
                  model.addElement(result);
               }
            }
         }         
      };
      new Thread(moveResult).start();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      Priority = new javax.swing.JComboBox<>(TaskPriority.values());
      Count = new javax.swing.JTextField();
      BtnAddTask = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      Results = new javax.swing.JList<>();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      Priority.setPreferredSize(new java.awt.Dimension(90, 25));

      Count.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
      Count.setText("1000000000");
      Count.setPreferredSize(new java.awt.Dimension(90, 25));

      BtnAddTask.setText("Wykonaj");
      BtnAddTask.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            BtnAddTaskActionPerformed(evt);
         }
      });

      jScrollPane1.setViewportView(Results);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(Priority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(Count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(BtnAddTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(Priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(Count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(BtnAddTask)
                  .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void BtnAddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddTaskActionPerformed
      try
      {
         long count=Long.parseUnsignedLong(Count.getText());
         TaskPriority priority=(TaskPriority)Priority.getSelectedItem();
         tasks.put(new Task(priority,count));
      }
      catch(Exception e)
      {
      }
   }//GEN-LAST:event_BtnAddTaskActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(HarmonicMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(HarmonicMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(HarmonicMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(HarmonicMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new HarmonicMainForm().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton BtnAddTask;
   private javax.swing.JTextField Count;
   private javax.swing.JComboBox<TaskPriority> Priority;
   private javax.swing.JList<Result> Results;
   private javax.swing.JScrollPane jScrollPane1;
   // End of variables declaration//GEN-END:variables
}
