package test013;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author alex
 */
public class Test013 extends javax.swing.JFrame {

    PrintStream out;
    
    public Test013() {
        initComponents();
        out=null;
    }

    public void AppendText(String str)
    {
        BoxText.append(str+"\n");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EdHost = new javax.swing.JTextField();
        LbHost = new javax.swing.JLabel();
        LbSemicolon = new javax.swing.JLabel();
        EdClnPort = new javax.swing.JTextField();
        BtnClnConn = new javax.swing.JButton();
        LbPort = new javax.swing.JLabel();
        EdSrvPort = new javax.swing.JTextField();
        BtnSrvConn = new javax.swing.JButton();
        BoxScroll = new javax.swing.JScrollPane();
        BoxText = new javax.swing.JTextArea();
        EdMessage = new javax.swing.JTextField();
        BtnSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EdHost.setText("localhost");

        LbHost.setText("host:");

        LbSemicolon.setText(":");

        EdClnPort.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        EdClnPort.setText("3000");

        BtnClnConn.setText("Connect");
        BtnClnConn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClnConnActionPerformed(evt);
            }
        });

        LbPort.setText("port:");

        EdSrvPort.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        EdSrvPort.setText("3000");

        BtnSrvConn.setText("Connect");
        BtnSrvConn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSrvConnActionPerformed(evt);
            }
        });

        BoxText.setColumns(20);
        BoxText.setRows(5);
        BoxScroll.setViewportView(BoxText);

        EdMessage.setText("Hello");

        BtnSend.setText("Send");
        BtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BoxScroll, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LbHost)
                            .addComponent(LbPort))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EdSrvPort, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnSrvConn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EdHost, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LbSemicolon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EdClnPort, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnClnConn)))
                        .addGap(0, 153, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EdMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnSend)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LbHost)
                    .addComponent(EdHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LbSemicolon)
                    .addComponent(EdClnPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnClnConn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LbPort)
                    .addComponent(EdSrvPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSrvConn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BoxScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EdMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSend))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSrvConnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSrvConnActionPerformed
        try 
        {
            ServerSocket server=new ServerSocket(Integer.parseInt(EdSrvPort.getText()));
            new ServerThread(server,this).start();           
        }
        catch (IOException ex) 
        {
            Logger.getLogger(Test013.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnSrvConnActionPerformed

    private void BtnClnConnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClnConnActionPerformed
        try 
        {
            Socket client=new Socket(EdHost.getText(),Integer.parseInt(EdClnPort.getText()));
            AppendText("Client connected");
            out=new PrintStream(client.getOutputStream());
        } 
        catch (UnknownHostException ex) 
        {
            Logger.getLogger(Test013.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex) 
        {
            Logger.getLogger(Test013.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnClnConnActionPerformed

    private void BtnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSendActionPerformed
        out.println(EdMessage.getText());
	out.flush();
    }//GEN-LAST:event_BtnSendActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test013.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test013.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test013.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test013.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test013().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane BoxScroll;
    private javax.swing.JTextArea BoxText;
    private javax.swing.JButton BtnClnConn;
    private javax.swing.JButton BtnSend;
    private javax.swing.JButton BtnSrvConn;
    private javax.swing.JTextField EdClnPort;
    private javax.swing.JTextField EdHost;
    private javax.swing.JTextField EdMessage;
    private javax.swing.JTextField EdSrvPort;
    private javax.swing.JLabel LbHost;
    private javax.swing.JLabel LbPort;
    private javax.swing.JLabel LbSemicolon;
    // End of variables declaration//GEN-END:variables
}

class ServerThread extends Thread
{
    private ServerSocket server;
    private Test013 main;
    private Boolean work;
    public ServerThread(ServerSocket server,Test013 main)
    {
        super("Server");
        this.server=server;
        this.main=main;
        work=true;
    }
    public void Terminate()
    {
        work=false;
    }
    
    @Override
    public void run()
    {
        try 
        {
            main.AppendText("Server binded at "+server.getInetAddress().getLocalHost().getHostAddress()+":"+server.getLocalPort());
            main.AppendText("Run the Client");
            Socket socket=server.accept();
            try (BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream())))
            {
                while(work)
                {
                    String str=in.readLine();
                    main.AppendText(str);
                }
            }
        }
        catch (UnknownHostException ex) 
        {
            Logger.getLogger(ServerThread.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex) 
        {
            Logger.getLogger(ServerThread.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}