#include<iostream>
using std::endl;
using std::cout;
using std::cin;
using std::string;
using std::ostream;
using std::istream;
///****************************************************************************************
///****************************************************************************************
class MyA{
    public:
        MyA(int=0, int=0, int=0);
        MyA(const MyA&);
        MyA& MyAIni(int=0, int=0, int=0);
        MyA& MyAPrint();
        MyA MyAAdd(const MyA&)const;
        MyA operator+(const MyA&)const;
        MyA operator+(int)const;
        MyA& operator++();
        MyA operator++(int);


        int GetX2();
        int GetX1();
        int GetX0();
        int GetCrC();

        int SetX2(int);
        int SetX1(int);
        int SetX0(int);

    private:
        int CrC();
        int SetCrC();

        int x2;
        int x1;
        int x0;

        int cRc;
    };
///****************************************************************************************
///****************************************************************************************
MyA operator+(int, const MyA&);
ostream& operator<<(ostream&, MyA&);
istream& operator>>(istream&, MyA&);
///****************************************************************************************
int MyRead(string);
int MyRead();
///****************************************************************************************
///****************************************************************************************
MyA::MyA(int x2, int x1, int x0){
            MyAIni(x2, x1, x0);
            }
///****************************************************************************************
MyA::MyA(const MyA& myA){
    MyAIni(myA.x2, myA.x1, myA.x0);
    }
///****************************************************************************************
MyA& MyA::MyAIni(int x2, int x1, int x0){
            this->x2 = x2;
            this->x1 = x1;
            this->x0 = x0;
            SetCrC();
            return *this;
            }
///****************************************************************************************
MyA& MyA::MyAPrint(){
    cout<<"x2 = "<<x2<<", x1 = "<<x1<<", x0 = "<<x0<<", CRC = "<<cRc<<endl;
    return *this;
    }
///****************************************************************************************
int MyA::CrC(){
    return 4*(x2%2)+2*(x1%2)+x0%2;
    }
///****************************************************************************************
int MyA::SetCrC(){
    cRc = CrC();
    return cRc;
    }
///****************************************************************************************
int MyA::GetX2(){return x2;}
int MyA::GetX1(){return x1;}
int MyA::GetX0(){return x0;}
int MyA::GetCrC(){return cRc;}
///****************************************************************************************
int MyA::SetX2(int x2){
    int x=this->x2;
    this->x2 = x2;
    SetCrC();
    return x;
    }
///****************************************************************************************
int MyA::SetX1(int x1){
    int x=this->x1;
    this->x1 = x1;
    SetCrC();
    return x;
    }
///****************************************************************************************
int MyA::SetX0(int x0){
    int x=this->x0;
    this->x0 = x0;
    SetCrC();
    return x;
    }
///****************************************************************************************
MyA MyA::MyAAdd(const MyA& myA)const{
    return MyA(x2+myA.x2, x1+myA.x1, x0+myA.x0);
    }
///****************************************************************************************
MyA MyA::operator+(const MyA& myA)const{
    return MyA(x2+myA.x2, x1+myA.x1, x0+myA.x0);
    }
///****************************************************************************************
MyA MyA::operator+(int x)const{
    return MyA(x2+x, x1+x, x0+x);
    }
///****************************************************************************************
MyA& MyA::operator++(){
    ++x2;
    ++x1;
    ++x0;
    SetCrC();
    return *this;
    }
///****************************************************************************************
MyA MyA::operator++(int){
    MyA myA(*this);
    ++(*this);
    return myA;
    }
///****************************************************************************************
///****************************************************************************************
MyA operator+(int x, const MyA& myA){
    return myA + x;
    }
///****************************************************************************************
ostream& operator<<(ostream& s, MyA& myA){
    s<<"x2 = "<<myA.GetX2()<<", x1 = "<<myA.GetX1();
    s<<", x0 = "<<myA.GetX0()<<", CRC = "<<myA.GetCrC()<<endl;
    return s;
    }
///****************************************************************************************
istream& operator>>(istream& s, MyA& myA){
    int x;
    cout<<"x2? = ";
    s>>x;
    myA.SetX2(x);
    cout<<"x1? = ";
    s>>x;
    myA.SetX1(x);
    cout<<"x0? = ";
    s>>x;
    myA.SetX0(x);
    return s;
    }
///****************************************************************************************
///****************************************************************************************
int MyRead(string myStr){
    int x;
    cout<<myStr;
    cin>>x;
    return x;
    }
///****************************************************************************************
int MyRead(){return MyRead("x? = ");}
///****************************************************************************************
///****************************************************************************************
int main(){
    MyA myA(1,2,3);
    MyA myB(10,20,30);
    cin>>myB;
    cout<<myB<<endl;
    ///operator<<(operator<<(cout,myB),endl);
    return 0;
    }
