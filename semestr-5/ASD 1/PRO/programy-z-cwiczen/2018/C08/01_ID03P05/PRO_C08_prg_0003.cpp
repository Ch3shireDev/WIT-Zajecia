#include <iostream>
using std::cout;
using std::cin;
using std::endl;
using std::string;
using std::ostream;
using std::istream;
///*********************************************************************************************
///*********************************************************************************************
class MyApplication{
    public:
            void Main01();
            void Main02();
    };
///*********************************************************************************************
///*********************************************************************************************
class Candy{
    public:
        Candy(int, int);
        int GetSugar();
        int GetkCal();
        Candy operator+(const Candy&)const;
    private:
        int sugar;
        int kCal;
friend ostream& operator<<(ostream& , const Candy&);
    };
///*********************************************************************************************
///*********************************************************************************************
class Box{
    public:
        Box(Candy, Candy);

        Candy GetCoco();
        Candy GetJam();
        Box operator+(const Box&)const;
    private:
        Candy coco;
        Candy jam;
friend ostream& operator<<(ostream& , const Box&);
    };
///*********************************************************************************************
///*********************************************************************************************
class Trunk{
    public:
        Trunk(Box, Box);

        Box GetRose();
        Box GetLilz();
        Trunk operator+(const Trunk&)const;
    private:
        Box rose;
        Box lily;
friend ostream& operator<<(ostream& , const Trunk&);
    };
/// 3,3,4,4,5,5
///*********************************************************************************************
///*********************************************************************************************
Candy::Candy(int sugar, int kCal):sugar(sugar), kCal(kCal){}
///*********************************************************************************************
int Candy::GetSugar(){return sugar;}
///*********************************************************************************************
int Candy::GetkCal(){return kCal;}
///*********************************************************************************************
Candy Candy::operator+(const Candy& candy)const{
    return Candy(sugar+candy.sugar, kCal+candy.kCal);
    }
///*********************************************************************************************
ostream& operator<<(ostream& s, const Candy& candy){
    s<<"("<<candy.sugar<<", "<<candy.kCal<<")";
    return s;
    }
///*********************************************************************************************
///*********************************************************************************************
Box::Box(Candy coco, Candy jam):coco(coco),jam(jam){}
///*********************************************************************************************
Candy Box::GetCoco(){return coco;}
///*********************************************************************************************
Candy Box::GetJam(){return jam;}
///*********************************************************************************************
Box Box::operator+(const Box& box)const{
    return Box(coco+box.coco, jam+box.jam);
    }
///*********************************************************************************************
ostream& operator<<(ostream& s, const Box& box){
    s<<"["<<box.coco<<", "<<box.jam<<"]";
    return s;
    }

///*********************************************************************************************
///*********************************************************************************************
Trunk::Trunk(Box rose, Box lily):rose(rose),lily(lily){}
///*********************************************************************************************
Box Trunk::GetRose(){return rose;}
///*********************************************************************************************
Box Trunk::GetLily(){return lily;}
///*********************************************************************************************
Trunk Trunk::operator+(const Trunk& trunk)const{
    return Trunk(rose+trunk.rose, lily+trunk.lily);
    }
///*********************************************************************************************
ostream& operator<<(ostream& s, const Trunk& trunk){
    s<<"\{"<<trunk.rose<<", "<<trunk.lily<<"\}";
    return s;
    }


///*********************************************************************************************
///*********************************************************************************************
int main(){
    (new MyApplication)->Main02();
    return 0;
    }
///*********************************************************************************************
///*********************************************************************************************
void MyApplication::Main02(){
    Box box01(Candy(1,2), Candy(3,4));
    cout<<box01+box01<<endl;
    cout<<"coco sugar = "<< box01.GetCoco().GetSugar()<<endl;
    }
///*********************************************************************************************
///*********************************************************************************************

