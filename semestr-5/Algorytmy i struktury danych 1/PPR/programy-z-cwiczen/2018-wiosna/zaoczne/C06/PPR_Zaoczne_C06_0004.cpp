#include <iostream>
using namespace std;
///************************************************************************************
///************************************************************************************
struct MyPoint{
    double x;
    double y;
    };
///************************************************************************************
///************************************************************************************
MyPoint MyPointNew(double, double);
void MyPointPrint(MyPoint, string);
MyPoint MyPointMove(MyPoint , MyPoint);
///************************************************************************************
///************************************************************************************
double MyRead(string);
///************************************************************************************
///************************************************************************************
MyPoint MyPointNew(double x, double y){
    MyPoint myPoint;

    myPoint.x = x;
    myPoint.y = y;

    return myPoint;
    }
///************************************************************************************
void MyPointPrint(MyPoint myPoint, string mS){
    cout<<mS;
    cout<<"x = "<<myPoint.x<<", y = "<<myPoint.y;
    }
///************************************************************************************
MyPoint MyPointMove(MyPoint mP1, MyPoint mP2){
    return MyPointNew(mP1.x + mP2.x, mP1.y + mP2.y);
    }
///************************************************************************************
///************************************************************************************
double MyRead(string mS){
    double x;
    cout<<mS;
    cin>>x;
    return x;
    }
///************************************************************************************
///************************************************************************************

int main(){
    MyPoint mP1;
    MyPoint mP2, mPV;

    mP1 = MyPointNew(MyRead("\tx ?="), MyRead("mP1:\n\ty ?="));

    MyPointPrint(mP1, "mP1: ");
    MyPointPrint(MyPointMove(mP1,MyPointNew(1,1)), "\nEmpty: ");
    mPV = MyPointNew(1,1);
    mP2 = MyPointMove(mP1, mPV);
    MyPointPrint(mP2, "\nmP1 + (1, 1): ");


    return 0;
    }











